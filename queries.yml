---
:recorded_at: !ruby/object:ActiveSupport::TimeWithZone
  utc: 2021-06-18 06:22:31.194795000 Z
  zone: &1 !ruby/object:ActiveSupport::TimeZone
    name: Etc/UTC
  time: 2021-06-18 06:22:31.194795000 Z
:uuid: 7cc411ec-c1c7-46ea-93fd-1563342e6137
:hostname: 127.0.0.1
:version: 14.0.0-pre
:installation_type: gitlab-development-kit
:active_user_count: SELECT COUNT("users"."id") FROM "users" WHERE ("users"."state"
  IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type" IN (6, 4))
:edition: EE Free
:license: {}
:settings:
  :ldap_encrypted_secrets_enabled: false
  :operating_system: mac_os_x-11.4
  :gitaly_apdex: -1
:counts:
  :assignee_lists: SELECT COUNT("lists"."id") FROM "lists" WHERE "lists"."list_type"
    = 3
  :boards: SELECT COUNT("boards"."id") FROM "boards"
  :ci_builds: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE "ci_builds"."type"
    = 'Ci::Build'
  :ci_internal_pipelines: SELECT COUNT("ci_pipelines"."id") FROM "ci_pipelines" WHERE
    ("ci_pipelines"."source" IN (1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13) OR "ci_pipelines"."source"
    IS NULL)
  :ci_external_pipelines: SELECT COUNT("ci_pipelines"."id") FROM "ci_pipelines" WHERE
    "ci_pipelines"."source" = 6
  :ci_pipeline_config_auto_devops: SELECT COUNT("ci_pipelines"."id") FROM "ci_pipelines"
    WHERE "ci_pipelines"."config_source" = 2
  :ci_pipeline_config_repository: SELECT COUNT("ci_pipelines"."id") FROM "ci_pipelines"
    WHERE "ci_pipelines"."config_source" = 1
  :ci_triggers: SELECT COUNT("ci_triggers"."id") FROM "ci_triggers"
  :ci_pipeline_schedules: SELECT COUNT("ci_pipeline_schedules"."id") FROM "ci_pipeline_schedules"
  :auto_devops_enabled: SELECT COUNT("project_auto_devops"."id") FROM "project_auto_devops"
    WHERE "project_auto_devops"."enabled" = TRUE
  :auto_devops_disabled: SELECT COUNT("project_auto_devops"."id") FROM "project_auto_devops"
    WHERE "project_auto_devops"."enabled" = FALSE
  :deploy_keys: SELECT COUNT("keys"."id") FROM "keys" WHERE "keys"."type" = 'DeployKey'
  :deployments: SELECT COUNT("deployments"."id") FROM "deployments"
  :successful_deployments: SELECT COUNT("deployments"."id") FROM "deployments" WHERE
    "deployments"."status" = 2
  :failed_deployments: SELECT COUNT("deployments"."id") FROM "deployments" WHERE "deployments"."status"
    = 3
  :environments: SELECT COUNT("environments"."id") FROM "environments"
  :clusters: SELECT COUNT("clusters"."id") FROM "clusters"
  :clusters_enabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE "clusters"."enabled"
    = TRUE
  :project_clusters_enabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE "clusters"."enabled"
    = TRUE AND "clusters"."cluster_type" = 3
  :group_clusters_enabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE "clusters"."enabled"
    = TRUE AND "clusters"."cluster_type" = 2
  :instance_clusters_enabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE
    "clusters"."enabled" = TRUE AND "clusters"."cluster_type" = 1
  :clusters_disabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE "clusters"."enabled"
    = FALSE
  :project_clusters_disabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE
    "clusters"."enabled" = FALSE AND "clusters"."cluster_type" = 3
  :group_clusters_disabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE "clusters"."enabled"
    = FALSE AND "clusters"."cluster_type" = 2
  :instance_clusters_disabled: SELECT COUNT("clusters"."id") FROM "clusters" WHERE
    "clusters"."enabled" = FALSE AND "clusters"."cluster_type" = 1
  :clusters_platforms_eks: SELECT COUNT("clusters"."id") FROM "clusters" INNER JOIN
    "cluster_providers_aws" ON "cluster_providers_aws"."cluster_id" = "clusters"."id"
    WHERE "clusters"."provider_type" = 2 AND ("cluster_providers_aws"."status" IN
    (3)) AND "clusters"."enabled" = TRUE
  :clusters_platforms_gke: SELECT COUNT("clusters"."id") FROM "clusters" INNER JOIN
    "cluster_providers_gcp" ON "cluster_providers_gcp"."cluster_id" = "clusters"."id"
    WHERE "clusters"."provider_type" = 1 AND ("cluster_providers_gcp"."status" IN
    (3)) AND "clusters"."enabled" = TRUE
  :clusters_platforms_user: SELECT COUNT("clusters"."id") FROM "clusters" WHERE "clusters"."provider_type"
    = 0 AND "clusters"."enabled" = TRUE
  :clusters_applications_helm: SELECT COUNT("clusters_applications_helm"."id") FROM
    "clusters_applications_helm" WHERE "clusters_applications_helm"."status" IN (11,
    3, 5)
  :clusters_applications_ingress: SELECT COUNT("clusters_applications_ingress"."id")
    FROM "clusters_applications_ingress" WHERE "clusters_applications_ingress"."status"
    IN (11, 3, 5)
  :clusters_applications_cert_managers: SELECT COUNT("clusters_applications_cert_managers"."id")
    FROM "clusters_applications_cert_managers" WHERE "clusters_applications_cert_managers"."status"
    IN (11, 3, 5)
  :clusters_applications_crossplane: SELECT COUNT("clusters_applications_crossplane"."id")
    FROM "clusters_applications_crossplane" WHERE "clusters_applications_crossplane"."status"
    IN (11, 3, 5)
  :clusters_applications_prometheus: SELECT COUNT("clusters_applications_prometheus"."id")
    FROM "clusters_applications_prometheus" WHERE "clusters_applications_prometheus"."status"
    IN (11, 3, 5)
  :clusters_applications_runner: SELECT COUNT("clusters_applications_runners"."id")
    FROM "clusters_applications_runners" WHERE "clusters_applications_runners"."status"
    IN (11, 3, 5)
  :clusters_applications_knative: SELECT COUNT("clusters_applications_knative"."id")
    FROM "clusters_applications_knative" WHERE "clusters_applications_knative"."status"
    IN (11, 3, 5)
  :clusters_applications_elastic_stack: SELECT COUNT("clusters_applications_elastic_stacks"."id")
    FROM "clusters_applications_elastic_stacks" WHERE "clusters_applications_elastic_stacks"."status"
    IN (11, 3, 5)
  :clusters_applications_jupyter: SELECT COUNT("clusters_applications_jupyter"."id")
    FROM "clusters_applications_jupyter" WHERE "clusters_applications_jupyter"."status"
    IN (11, 3, 5)
  :clusters_applications_cilium: SELECT COUNT("clusters_applications_cilium"."id")
    FROM "clusters_applications_cilium" WHERE "clusters_applications_cilium"."status"
    IN (11, 3, 5)
  :clusters_management_project: SELECT COUNT("clusters"."id") FROM "clusters" WHERE
    "clusters"."management_project_id" IS NOT NULL
  :kubernetes_agents: SELECT COUNT("cluster_agents"."id") FROM "cluster_agents"
  :kubernetes_agents_with_token: SELECT COUNT(DISTINCT "cluster_agent_tokens"."agent_id")
    FROM "cluster_agent_tokens"
  :in_review_folder: SELECT COUNT("environments"."id") FROM "environments" WHERE "environments"."environment_type"
    = 'review'
  :grafana_integrated_projects: SELECT COUNT("grafana_integrations"."id") FROM "grafana_integrations"
    WHERE "grafana_integrations"."enabled" = TRUE
  :groups: SELECT COUNT("namespaces"."id") FROM "namespaces" WHERE "namespaces"."type"
    = 'Group'
  :issues: SELECT COUNT("issues"."id") FROM "issues"
  :issues_created_from_gitlab_error_tracking_ui: SELECT COUNT("sentry_issues"."id")
    FROM "sentry_issues"
  :issues_with_associated_zoom_link: SELECT COUNT("zoom_meetings"."id") FROM "zoom_meetings"
    WHERE "zoom_meetings"."issue_status" = 1
  :issues_using_zoom_quick_actions: SELECT COUNT(DISTINCT "zoom_meetings"."issue_id")
    FROM "zoom_meetings"
  :issues_with_embedded_grafana_charts_approx: SELECT COUNT("issues"."id") FROM "issues"
    JOIN grafana_integrations USING (project_id) WHERE (issues.description LIKE '%'
    || grafana_integrations.grafana_url || '%') AND "grafana_integrations"."enabled"
    = TRUE
  :issues_created_from_alerts: SELECT (SELECT COUNT("issues"."id") FROM "issues" INNER
    JOIN "alert_management_alerts" ON "alert_management_alerts"."issue_id" = "issues"."id")
    + (SELECT COUNT("issues"."id") FROM "issues" INNER JOIN "issues_self_managed_prometheus_alert_events"
    ON "issues_self_managed_prometheus_alert_events"."issue_id" = "issues"."id") +
    (SELECT COUNT("issues"."id") FROM "issues" INNER JOIN "issues_prometheus_alert_events"
    ON "issues_prometheus_alert_events"."issue_id" = "issues"."id")
  :issues_created_gitlab_alerts: SELECT COUNT("issues"."id") FROM "issues" INNER JOIN
    "alert_management_alerts" ON "alert_management_alerts"."issue_id" = "issues"."id"
    WHERE "issues"."author_id" != 22
  :issues_created_manually_from_alerts: SELECT COUNT("issues"."id") FROM "issues"
    INNER JOIN "alert_management_alerts" ON "alert_management_alerts"."issue_id" =
    "issues"."id" WHERE "issues"."author_id" != 22
  :incident_issues: SELECT COUNT("issues"."id") FROM "issues" WHERE "issues"."issue_type"
    = 1
  :alert_bot_incident_issues: SELECT COUNT("issues"."id") FROM "issues" WHERE "issues"."author_id"
    = 22
  :incident_labeled_issues: SELECT COUNT("issues"."id") FROM "issues" INNER JOIN "label_links"
    ON "label_links"."target_type" = 'Issue' AND "label_links"."target_id" = "issues"."id"
    INNER JOIN "labels" ON "labels"."id" = "label_links"."label_id" WHERE "labels"."title"
    = 'incident' AND "labels"."color" = '#CC0033' AND "labels"."description" = 'Denotes
    a disruption to IT services and the associated issues require immediate attention'
  :keys: SELECT COUNT("keys"."id") FROM "keys"
  :label_lists: SELECT COUNT("lists"."id") FROM "lists" WHERE "lists"."list_type"
    = 1
  :lfs_objects: SELECT COUNT("lfs_objects"."id") FROM "lfs_objects"
  :milestone_lists: SELECT COUNT("lists"."id") FROM "lists" WHERE "lists"."list_type"
    = 4
  :milestones: SELECT COUNT("milestones"."id") FROM "milestones"
  :projects_with_packages: SELECT COUNT(DISTINCT "packages_packages"."project_id")
    FROM "packages_packages"
  :packages: SELECT COUNT("packages_packages"."id") FROM "packages_packages"
  :pages_domains: SELECT COUNT("pages_domains"."id") FROM "pages_domains"
  :pool_repositories: SELECT COUNT("pool_repositories"."id") FROM "pool_repositories"
  :projects: SELECT COUNT("projects"."id") FROM "projects"
  :projects_creating_incidents: SELECT COUNT(DISTINCT "issues"."project_id") FROM
    "issues" WHERE "issues"."issue_type" = 1
  :projects_imported_from_github: SELECT COUNT("projects"."id") FROM "projects" WHERE
    "projects"."import_type" = 'github'
  :projects_with_repositories_enabled: SELECT COUNT("project_features"."id") FROM
    "project_features" WHERE (repository_access_level > 0)
  :projects_with_tracing_enabled: SELECT COUNT("project_tracing_settings"."id") FROM
    "project_tracing_settings"
  :projects_with_error_tracking_enabled: SELECT COUNT("project_error_tracking_settings"."project_id")
    FROM "project_error_tracking_settings" WHERE "project_error_tracking_settings"."enabled"
    = TRUE
  :projects_with_alerts_created: SELECT COUNT(DISTINCT "alert_management_alerts"."project_id")
    FROM "alert_management_alerts"
  :projects_with_enabled_alert_integrations: SELECT COUNT(DISTINCT "alert_management_http_integrations"."project_id")
    FROM "alert_management_http_integrations" WHERE "alert_management_http_integrations"."active"
    = TRUE
  :projects_with_terraform_reports: SELECT COUNT(DISTINCT "ci_job_artifacts"."project_id")
    FROM "ci_job_artifacts" WHERE "ci_job_artifacts"."file_type" = 18
  :projects_with_terraform_states: SELECT COUNT(DISTINCT "terraform_states"."project_id")
    FROM "terraform_states"
  :protected_branches: SELECT COUNT("protected_branches"."id") FROM "protected_branches"
  :protected_branches_except_default: SELECT COUNT("protected_branches"."id") FROM
    "protected_branches" WHERE NOT (("protected_branches"."name" IN ('main', 'master')
    OR "protected_branches"."name" IS NULL))
  :releases: SELECT COUNT("releases"."id") FROM "releases"
  :remote_mirrors: SELECT COUNT("remote_mirrors"."id") FROM "remote_mirrors"
  :personal_snippets: SELECT COUNT("snippets"."id") FROM "snippets" WHERE "snippets"."type"
    = 'PersonalSnippet'
  :project_snippets: SELECT COUNT("snippets"."id") FROM "snippets" WHERE "snippets"."type"
    = 'ProjectSnippet'
  :suggestions: SELECT COUNT("suggestions"."id") FROM "suggestions"
  :terraform_reports: SELECT COUNT("ci_job_artifacts"."id") FROM "ci_job_artifacts"
    WHERE "ci_job_artifacts"."file_type" = 18
  :terraform_states: SELECT COUNT("terraform_states"."id") FROM "terraform_states"
  :todos: SELECT COUNT("todos"."id") FROM "todos"
  :uploads: SELECT COUNT("uploads"."id") FROM "uploads"
  :web_hooks: SELECT COUNT("web_hooks"."id") FROM "web_hooks"
  :labels: SELECT COUNT("labels"."id") FROM "labels" ORDER BY "labels"."title" ASC
  :merge_requests: SELECT COUNT("merge_requests"."id") FROM "merge_requests"
  :notes: SELECT COUNT("notes"."id") FROM "notes"
  :ci_runners: SELECT COUNT("ci_runners"."id") FROM "ci_runners"
  :ci_runners_instance_type_active: SELECT COUNT("ci_runners"."id") FROM "ci_runners"
    WHERE "ci_runners"."runner_type" = 1 AND "ci_runners"."active" = TRUE
  :ci_runners_group_type_active: SELECT COUNT("ci_runners"."id") FROM "ci_runners"
    WHERE "ci_runners"."runner_type" = 2 AND "ci_runners"."active" = TRUE
  :ci_runners_project_type_active: SELECT COUNT("ci_runners"."id") FROM "ci_runners"
    WHERE "ci_runners"."runner_type" = 3 AND "ci_runners"."active" = TRUE
  :ci_runners_instance_type_active_online: SELECT COUNT("ci_runners"."id") FROM "ci_runners"
    WHERE "ci_runners"."runner_type" = 1 AND "ci_runners"."active" = TRUE AND (contacted_at
    > '2021-06-18 04:22:32.506717')
  :ci_runners_group_type_active_online: SELECT COUNT("ci_runners"."id") FROM "ci_runners"
    WHERE "ci_runners"."runner_type" = 2 AND "ci_runners"."active" = TRUE AND (contacted_at
    > '2021-06-18 04:22:32.507207')
  :ci_runners_project_type_active_online: SELECT COUNT("ci_runners"."id") FROM "ci_runners"
    WHERE "ci_runners"."runner_type" = 3 AND "ci_runners"."active" = TRUE AND (contacted_at
    > '2021-06-18 04:22:32.507972')
  :projects_asana_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'AsanaService'
  :groups_asana_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'AsanaService'
  :templates_asana_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'AsanaService'
  :instances_asana_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'AsanaService'
  :projects_inheriting_asana_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'AsanaService'
  :groups_inheriting_asana_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'AsanaService'
  :projects_assembla_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'AssemblaService'
  :groups_assembla_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'AssemblaService'
  :templates_assembla_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'AssemblaService'
  :instances_assembla_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'AssemblaService'
  :projects_inheriting_assembla_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'AssemblaService'
  :groups_inheriting_assembla_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'AssemblaService'
  :projects_bamboo_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'BambooService'
  :groups_bamboo_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'BambooService'
  :templates_bamboo_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'BambooService'
  :instances_bamboo_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'BambooService'
  :projects_inheriting_bamboo_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'BambooService'
  :groups_inheriting_bamboo_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'BambooService'
  :projects_bugzilla_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'BugzillaService'
  :groups_bugzilla_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'BugzillaService'
  :templates_bugzilla_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'BugzillaService'
  :instances_bugzilla_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'BugzillaService'
  :projects_inheriting_bugzilla_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'BugzillaService'
  :groups_inheriting_bugzilla_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'BugzillaService'
  :projects_buildkite_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'BuildkiteService'
  :groups_buildkite_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'BuildkiteService'
  :templates_buildkite_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'BuildkiteService'
  :instances_buildkite_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'BuildkiteService'
  :projects_inheriting_buildkite_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'BuildkiteService'
  :groups_inheriting_buildkite_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'BuildkiteService'
  :projects_campfire_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'CampfireService'
  :groups_campfire_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'CampfireService'
  :templates_campfire_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'CampfireService'
  :instances_campfire_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'CampfireService'
  :projects_inheriting_campfire_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'CampfireService'
  :groups_inheriting_campfire_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'CampfireService'
  :projects_confluence_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'ConfluenceService'
  :groups_confluence_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'ConfluenceService'
  :templates_confluence_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'ConfluenceService'
  :instances_confluence_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'ConfluenceService'
  :projects_inheriting_confluence_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'ConfluenceService'
  :groups_inheriting_confluence_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'ConfluenceService'
  :projects_custom_issue_tracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'CustomIssueTrackerService'
  :groups_custom_issue_tracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'CustomIssueTrackerService'
  :templates_custom_issue_tracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'CustomIssueTrackerService'
  :instances_custom_issue_tracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'CustomIssueTrackerService'
  :projects_inheriting_custom_issue_tracker_active: SELECT COUNT("services"."id")
    FROM "services" WHERE "services"."active" = TRUE AND "services"."project_id" IS
    NOT NULL AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" =
    'CustomIssueTrackerService'
  :groups_inheriting_custom_issue_tracker_active: SELECT COUNT("services"."id") FROM
    "services" WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL
    AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" = 'CustomIssueTrackerService'
  :projects_datadog_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'DatadogService'
  :groups_datadog_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'DatadogService'
  :templates_datadog_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'DatadogService'
  :instances_datadog_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'DatadogService'
  :projects_inheriting_datadog_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'DatadogService'
  :groups_inheriting_datadog_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'DatadogService'
  :projects_discord_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'DiscordService'
  :groups_discord_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'DiscordService'
  :templates_discord_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'DiscordService'
  :instances_discord_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'DiscordService'
  :projects_inheriting_discord_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'DiscordService'
  :groups_inheriting_discord_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'DiscordService'
  :projects_drone_ci_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'DroneCiService'
  :groups_drone_ci_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'DroneCiService'
  :templates_drone_ci_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'DroneCiService'
  :instances_drone_ci_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'DroneCiService'
  :projects_inheriting_drone_ci_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'DroneCiService'
  :groups_inheriting_drone_ci_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'DroneCiService'
  :projects_emails_on_push_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'EmailsOnPushService'
  :groups_emails_on_push_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'EmailsOnPushService'
  :templates_emails_on_push_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'EmailsOnPushService'
  :instances_emails_on_push_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'EmailsOnPushService'
  :projects_inheriting_emails_on_push_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'EmailsOnPushService'
  :groups_inheriting_emails_on_push_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'EmailsOnPushService'
  :projects_ewm_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'EwmService'
  :groups_ewm_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'EwmService'
  :templates_ewm_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'EwmService'
  :instances_ewm_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'EwmService'
  :projects_inheriting_ewm_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'EwmService'
  :groups_inheriting_ewm_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'EwmService'
  :projects_external_wiki_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'ExternalWikiService'
  :groups_external_wiki_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'ExternalWikiService'
  :templates_external_wiki_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'ExternalWikiService'
  :instances_external_wiki_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'ExternalWikiService'
  :projects_inheriting_external_wiki_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'ExternalWikiService'
  :groups_inheriting_external_wiki_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'ExternalWikiService'
  :projects_flowdock_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'FlowdockService'
  :groups_flowdock_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'FlowdockService'
  :templates_flowdock_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'FlowdockService'
  :instances_flowdock_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'FlowdockService'
  :projects_inheriting_flowdock_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'FlowdockService'
  :groups_inheriting_flowdock_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'FlowdockService'
  :projects_github_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'GithubService'
  :groups_github_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'GithubService'
  :templates_github_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'GithubService'
  :instances_github_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'GithubService'
  :projects_inheriting_github_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'GithubService'
  :groups_inheriting_github_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'GithubService'
  :projects_hangouts_chat_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'HangoutsChatService'
  :groups_hangouts_chat_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'HangoutsChatService'
  :templates_hangouts_chat_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'HangoutsChatService'
  :instances_hangouts_chat_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'HangoutsChatService'
  :projects_inheriting_hangouts_chat_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'HangoutsChatService'
  :groups_inheriting_hangouts_chat_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'HangoutsChatService'
  :projects_irker_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'IrkerService'
  :groups_irker_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'IrkerService'
  :templates_irker_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'IrkerService'
  :instances_irker_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'IrkerService'
  :projects_inheriting_irker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'IrkerService'
  :groups_inheriting_irker_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'IrkerService'
  :projects_jenkins_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'JenkinsService'
  :groups_jenkins_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'JenkinsService'
  :templates_jenkins_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'JenkinsService'
  :instances_jenkins_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'JenkinsService'
  :projects_inheriting_jenkins_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'JenkinsService'
  :groups_inheriting_jenkins_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'JenkinsService'
  :projects_jira_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'JiraService'
  :groups_jira_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'JiraService'
  :templates_jira_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'JiraService'
  :instances_jira_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'JiraService'
  :projects_inheriting_jira_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'JiraService'
  :groups_inheriting_jira_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'JiraService'
  :projects_mattermost_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'MattermostService'
  :groups_mattermost_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'MattermostService'
  :templates_mattermost_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'MattermostService'
  :instances_mattermost_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'MattermostService'
  :projects_inheriting_mattermost_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'MattermostService'
  :groups_inheriting_mattermost_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'MattermostService'
  :projects_mattermost_slash_commands_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'MattermostSlashCommandsService'
  :groups_mattermost_slash_commands_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'MattermostSlashCommandsService'
  :templates_mattermost_slash_commands_active: SELECT COUNT("services"."id") FROM
    "services" WHERE "services"."active" = TRUE AND "services"."template" = TRUE AND
    "services"."type" = 'MattermostSlashCommandsService'
  :instances_mattermost_slash_commands_active: SELECT COUNT("services"."id") FROM
    "services" WHERE "services"."active" = TRUE AND "services"."instance" = TRUE AND
    "services"."type" = 'MattermostSlashCommandsService'
  :projects_inheriting_mattermost_slash_commands_active: SELECT COUNT("services"."id")
    FROM "services" WHERE "services"."active" = TRUE AND "services"."project_id" IS
    NOT NULL AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" =
    'MattermostSlashCommandsService'
  :groups_inheriting_mattermost_slash_commands_active: SELECT COUNT("services"."id")
    FROM "services" WHERE "services"."active" = TRUE AND "services"."group_id" IS
    NOT NULL AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" =
    'MattermostSlashCommandsService'
  :projects_microsoft_teams_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'MicrosoftTeamsService'
  :groups_microsoft_teams_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'MicrosoftTeamsService'
  :templates_microsoft_teams_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'MicrosoftTeamsService'
  :instances_microsoft_teams_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'MicrosoftTeamsService'
  :projects_inheriting_microsoft_teams_active: SELECT COUNT("services"."id") FROM
    "services" WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT
    NULL AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" = 'MicrosoftTeamsService'
  :groups_inheriting_microsoft_teams_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'MicrosoftTeamsService'
  :projects_packagist_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'PackagistService'
  :groups_packagist_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'PackagistService'
  :templates_packagist_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'PackagistService'
  :instances_packagist_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'PackagistService'
  :projects_inheriting_packagist_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PackagistService'
  :groups_inheriting_packagist_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PackagistService'
  :projects_pipelines_email_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'PipelinesEmailService'
  :groups_pipelines_email_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'PipelinesEmailService'
  :templates_pipelines_email_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'PipelinesEmailService'
  :instances_pipelines_email_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'PipelinesEmailService'
  :projects_inheriting_pipelines_email_active: SELECT COUNT("services"."id") FROM
    "services" WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT
    NULL AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" = 'PipelinesEmailService'
  :groups_inheriting_pipelines_email_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PipelinesEmailService'
  :projects_pivotaltracker_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'PivotaltrackerService'
  :groups_pivotaltracker_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'PivotaltrackerService'
  :templates_pivotaltracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'PivotaltrackerService'
  :instances_pivotaltracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'PivotaltrackerService'
  :projects_inheriting_pivotaltracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PivotaltrackerService'
  :groups_inheriting_pivotaltracker_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PivotaltrackerService'
  :projects_prometheus_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'PrometheusService'
  :groups_prometheus_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'PrometheusService'
  :templates_prometheus_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'PrometheusService'
  :instances_prometheus_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'PrometheusService'
  :projects_inheriting_prometheus_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PrometheusService'
  :groups_inheriting_prometheus_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PrometheusService'
  :projects_pushover_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'PushoverService'
  :groups_pushover_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'PushoverService'
  :templates_pushover_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'PushoverService'
  :instances_pushover_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'PushoverService'
  :projects_inheriting_pushover_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PushoverService'
  :groups_inheriting_pushover_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'PushoverService'
  :projects_redmine_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'RedmineService'
  :groups_redmine_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'RedmineService'
  :templates_redmine_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'RedmineService'
  :instances_redmine_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'RedmineService'
  :projects_inheriting_redmine_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'RedmineService'
  :groups_inheriting_redmine_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'RedmineService'
  :projects_slack_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'SlackService'
  :groups_slack_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'SlackService'
  :templates_slack_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."template" = TRUE AND "services"."type" = 'SlackService'
  :instances_slack_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."instance" = TRUE AND "services"."type" = 'SlackService'
  :projects_inheriting_slack_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'SlackService'
  :groups_inheriting_slack_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'SlackService'
  :projects_slack_slash_commands_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'SlackSlashCommandsService'
  :groups_slack_slash_commands_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'SlackSlashCommandsService'
  :templates_slack_slash_commands_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'SlackSlashCommandsService'
  :instances_slack_slash_commands_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'SlackSlashCommandsService'
  :projects_inheriting_slack_slash_commands_active: SELECT COUNT("services"."id")
    FROM "services" WHERE "services"."active" = TRUE AND "services"."project_id" IS
    NOT NULL AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" =
    'SlackSlashCommandsService'
  :groups_inheriting_slack_slash_commands_active: SELECT COUNT("services"."id") FROM
    "services" WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL
    AND "services"."inherit_from_id" IS NOT NULL AND "services"."type" = 'SlackSlashCommandsService'
  :projects_teamcity_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'TeamcityService'
  :groups_teamcity_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'TeamcityService'
  :templates_teamcity_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'TeamcityService'
  :instances_teamcity_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'TeamcityService'
  :projects_inheriting_teamcity_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'TeamcityService'
  :groups_inheriting_teamcity_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'TeamcityService'
  :projects_unify_circuit_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'UnifyCircuitService'
  :groups_unify_circuit_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'UnifyCircuitService'
  :templates_unify_circuit_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'UnifyCircuitService'
  :instances_unify_circuit_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'UnifyCircuitService'
  :projects_inheriting_unify_circuit_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'UnifyCircuitService'
  :groups_inheriting_unify_circuit_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'UnifyCircuitService'
  :projects_webex_teams_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type"
    = 'WebexTeamsService'
  :groups_webex_teams_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type"
    = 'WebexTeamsService'
  :templates_webex_teams_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'WebexTeamsService'
  :instances_webex_teams_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'WebexTeamsService'
  :projects_inheriting_webex_teams_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'WebexTeamsService'
  :groups_inheriting_webex_teams_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'WebexTeamsService'
  :projects_youtrack_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."project_id" IS NOT NULL AND "services"."type" = 'YoutrackService'
  :groups_youtrack_active: SELECT COUNT("services"."id") FROM "services" WHERE "services"."active"
    = TRUE AND "services"."group_id" IS NOT NULL AND "services"."type" = 'YoutrackService'
  :templates_youtrack_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."template" = TRUE AND "services"."type"
    = 'YoutrackService'
  :instances_youtrack_active: SELECT COUNT("services"."id") FROM "services" WHERE
    "services"."active" = TRUE AND "services"."instance" = TRUE AND "services"."type"
    = 'YoutrackService'
  :projects_inheriting_youtrack_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."project_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'YoutrackService'
  :groups_inheriting_youtrack_active: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."active" = TRUE AND "services"."group_id" IS NOT NULL AND "services"."inherit_from_id"
    IS NOT NULL AND "services"."type" = 'YoutrackService'
  :projects_jira_server_active: 0
  :projects_jira_cloud_active: 0
  :projects_jira_dvcs_cloud_active: SELECT COUNT("project_feature_usages"."project_id")
    FROM "project_feature_usages" WHERE "project_feature_usages"."jira_dvcs_cloud_last_sync_at"
    IS NOT NULL
  :projects_jira_dvcs_server_active: SELECT COUNT("project_feature_usages"."project_id")
    FROM "project_feature_usages" WHERE "project_feature_usages"."jira_dvcs_server_last_sync_at"
    IS NOT NULL
  :projects_jira_issuelist_active: SELECT COUNT("services"."id"), "services"."id"
    AS t0_r0, "jira_tracker_data"."id" AS t1_r0, "jira_tracker_data"."service_id"
    AS t1_r1, "jira_tracker_data"."created_at" AS t1_r2, "jira_tracker_data"."updated_at"
    AS t1_r3, "jira_tracker_data"."encrypted_url" AS t1_r4, "jira_tracker_data"."encrypted_url_iv"
    AS t1_r5, "jira_tracker_data"."encrypted_api_url" AS t1_r6, "jira_tracker_data"."encrypted_api_url_iv"
    AS t1_r7, "jira_tracker_data"."encrypted_username" AS t1_r8, "jira_tracker_data"."encrypted_username_iv"
    AS t1_r9, "jira_tracker_data"."encrypted_password" AS t1_r10, "jira_tracker_data"."encrypted_password_iv"
    AS t1_r11, "jira_tracker_data"."jira_issue_transition_id" AS t1_r12, "jira_tracker_data"."project_key"
    AS t1_r13, "jira_tracker_data"."issues_enabled" AS t1_r14, "jira_tracker_data"."deployment_type"
    AS t1_r15, "jira_tracker_data"."vulnerabilities_issuetype" AS t1_r16, "jira_tracker_data"."vulnerabilities_enabled"
    AS t1_r17, "jira_tracker_data"."jira_issue_transition_automatic" AS t1_r18 FROM
    "services" LEFT OUTER JOIN "jira_tracker_data" ON "jira_tracker_data"."service_id"
    = "services"."id" WHERE "services"."type" = 'JiraService' AND "services"."active"
    = TRUE AND "jira_tracker_data"."issues_enabled" = TRUE
  :jira_imports_total_imported_count: SELECT COUNT("jira_imports"."id") FROM "jira_imports"
    WHERE "jira_imports"."status" = 4
  :jira_imports_projects_count: SELECT COUNT(DISTINCT "jira_imports"."project_id")
    FROM "jira_imports" WHERE "jira_imports"."status" = 4
  :jira_imports_total_imported_issues_count: SELECT SUM("jira_imports"."imported_issues_count")
    FROM "jira_imports" WHERE "jira_imports"."status" = 4
  :redis_usage_data_counter: !ruby/class 'Gitlab::UsageDataCounters::NetworkPolicyCounter'
  :user_preferences_user_gitpod_enabled: SELECT COUNT("user_preferences"."id") FROM
    "user_preferences" INNER JOIN "users" ON "users"."id" = "user_preferences"."user_id"
    WHERE "user_preferences"."gitpod_enabled" = TRUE AND ("users"."state" IN ('active'))
    AND ("users"."user_type" IS NULL OR "users"."user_type" IN (6, 4))
  :user_preferences_group_overview_details: SELECT COUNT("users"."id") FROM "users"
    WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type"
    IN (6, 4)) AND (group_view = 1 OR group_view IS NULL)
  :user_preferences_group_overview_security_dashboard: SELECT COUNT("users"."id")
    FROM "users" WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS
    NULL OR "users"."user_type" IN (6, 4)) AND "users"."group_view" = 2
  :projects_with_expiration_policy_disabled: SELECT COUNT(DISTINCT "container_expiration_policies"."project_id")
    FROM "container_expiration_policies" WHERE "container_expiration_policies"."enabled"
    = FALSE
  :projects_with_expiration_policy_enabled: SELECT COUNT(DISTINCT "container_expiration_policies"."project_id")
    FROM "container_expiration_policies" WHERE "container_expiration_policies"."enabled"
    = TRUE
  :projects_with_expiration_policy_enabled_with_keep_n_set_to_1: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."keep_n"
    = 1
  :projects_with_expiration_policy_enabled_with_keep_n_set_to_5: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."keep_n"
    = 5
  :projects_with_expiration_policy_enabled_with_keep_n_set_to_10: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."keep_n"
    = 10
  :projects_with_expiration_policy_enabled_with_keep_n_set_to_25: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."keep_n"
    = 25
  :projects_with_expiration_policy_enabled_with_keep_n_set_to_50: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."keep_n"
    = 50
  :projects_with_expiration_policy_enabled_with_keep_n_set_to_100: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."keep_n"
    = 100
  :projects_with_expiration_policy_enabled_with_cadence_set_to_1d: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."cadence"
    = '1d'
  :projects_with_expiration_policy_enabled_with_cadence_set_to_7d: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."cadence"
    = '7d'
  :projects_with_expiration_policy_enabled_with_cadence_set_to_14d: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."cadence"
    = '14d'
  :projects_with_expiration_policy_enabled_with_cadence_set_to_1month: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."cadence"
    = '1month'
  :projects_with_expiration_policy_enabled_with_cadence_set_to_3month: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."cadence"
    = '3month'
  :projects_with_expiration_policy_enabled_with_older_than_set_to_7d: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."older_than"
    = '7d'
  :projects_with_expiration_policy_enabled_with_older_than_set_to_14d: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."older_than"
    = '14d'
  :projects_with_expiration_policy_enabled_with_older_than_set_to_30d: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."older_than"
    = '30d'
  :projects_with_expiration_policy_enabled_with_older_than_set_to_90d: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."older_than"
    = '90d'
  :projects_with_expiration_policy_enabled_with_keep_n_unset: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."keep_n"
    IS NULL
  :projects_with_expiration_policy_enabled_with_older_than_unset: SELECT COUNT(DISTINCT
    "container_expiration_policies"."project_id") FROM "container_expiration_policies"
    WHERE "container_expiration_policies"."enabled" = TRUE AND "container_expiration_policies"."older_than"
    IS NULL
  :service_desk_enabled_projects: SELECT COUNT("projects"."id") FROM "projects" WHERE
    "projects"."service_desk_enabled" = TRUE
  :service_desk_issues: SELECT COUNT("issues"."id") FROM "issues" WHERE "issues"."project_id"
    IN (SELECT "projects"."id" FROM "projects" WHERE "projects"."service_desk_enabled"
    = TRUE) AND "issues"."author_id" = 23 AND "issues"."confidential" = TRUE
  in_product_marketing_email_create_0_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_create_0_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_create_1_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_create_1_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_create_2_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_create_2_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_verify_0_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_verify_0_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_verify_1_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_verify_1_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_verify_2_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_verify_2_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_trial_0_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_trial_0_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_trial_1_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_trial_1_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_trial_2_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_trial_2_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_team_0_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_team_0_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_team_1_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_team_1_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_team_2_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  in_product_marketing_email_team_2_cta_clicked: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" WHERE "in_product_marketing_emails"."cta_clicked_at"
    IS NOT NULL GROUP BY "in_product_marketing_emails"."track", "in_product_marketing_emails"."series"
  in_product_marketing_email_experience_0_sent: SELECT COUNT("in_product_marketing_emails"."id")
    FROM "in_product_marketing_emails" GROUP BY "in_product_marketing_emails"."track",
    "in_product_marketing_emails"."series"
  :snippets: SELECT (SELECT COUNT("snippets"."id") FROM "snippets" WHERE "snippets"."type"
    = 'PersonalSnippet') + (SELECT COUNT("snippets"."id") FROM "snippets" WHERE "snippets"."type"
    = 'ProjectSnippet')
  :confidential_epics: SELECT COUNT("epics"."id") FROM "epics" WHERE "epics"."confidential"
    = TRUE
  :dependency_list_usages_total:
    :redis_usage_data_block: "#<Proc:0x00007fc3ceeaf8c8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/ee/lib/ee/gitlab/usage_data.rb:194>"
  :epics: SELECT COUNT("epics"."id") FROM "epics"
  :epic_issues: SELECT COUNT("epic_issues"."id") FROM "epic_issues"
  :feature_flags: SELECT COUNT("operations_feature_flags"."id") FROM "operations_feature_flags"
  :geo_nodes: SELECT COUNT("geo_nodes"."id") FROM "geo_nodes"
  :geo_event_log_max_id: 0
  :ldap_group_links: SELECT COUNT("ldap_group_links"."id") FROM "ldap_group_links"
  :issues_with_health_status: SELECT COUNT("issues"."id") FROM "issues" WHERE "issues"."health_status"
    IS NOT NULL
  :ldap_keys: SELECT COUNT("keys"."id") FROM "keys" WHERE "keys"."type" = 'LDAPKey'
  :ldap_users: SELECT COUNT("users"."users.id") FROM "users" INNER JOIN "identities"
    ON "identities"."user_id" = "users"."id" WHERE (identities.provider LIKE 'ldap%')
  :merged_merge_requests_using_approval_rules: SELECT COUNT("merge_requests"."id")
    FROM "merge_requests" INNER JOIN "approval_merge_request_rules" ON "approval_merge_request_rules"."merge_request_id"
    = "merge_requests"."id" WHERE ("merge_requests"."state_id" IN (3))
  :projects_mirrored_with_pipelines_enabled: SELECT COUNT("projects"."id") FROM "projects"
    INNER JOIN "project_features" ON "project_features"."project_id" = "projects"."id"
    WHERE "projects"."mirror" = TRUE AND "projects"."mirror_trigger_builds" = TRUE
    AND "project_features"."builds_access_level" = 20
  :projects_reporting_ci_cd_back_to_github: SELECT COUNT("services"."id") FROM "services"
    WHERE "services"."type" = 'GithubService' AND "services"."active" = TRUE
  :status_page_projects: SELECT COUNT("status_page_settings"."project_id") FROM "status_page_settings"
    WHERE "status_page_settings"."enabled" = TRUE
  :status_page_issues: SELECT COUNT("issues"."id") FROM "issues" INNER JOIN "projects"
    ON "projects"."id" = "issues"."project_id" INNER JOIN "status_page_settings" ON
    "status_page_settings"."project_id" = "projects"."id" INNER JOIN "status_page_published_incidents"
    ON "status_page_published_incidents"."issue_id" = "issues"."id" WHERE "status_page_settings"."enabled"
    = TRUE AND "issues"."confidential" = FALSE
  :template_repositories: SELECT (SELECT COUNT("projects"."id") FROM "projects" WHERE
    "projects"."namespace_id" IS NULL) + (SELECT COUNT("projects"."id") FROM "projects"
    INNER JOIN namespaces ON projects.namespace_id = namespaces.custom_project_templates_group_id)
  :container_scanning_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE
    "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'container_scanning'
  :dast_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE "ci_builds"."type"
    = 'Ci::Build' AND "ci_builds"."name" = 'dast'
  :dependency_scanning_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE
    "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'dependency_scanning'
  :license_management_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE
    "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'license_management'
  :sast_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE "ci_builds"."type"
    = 'Ci::Build' AND "ci_builds"."name" = 'sast'
  :secret_detection_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE "ci_builds"."type"
    = 'Ci::Build' AND "ci_builds"."name" = 'secret_detection'
  :coverage_fuzzing_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE "ci_builds"."type"
    = 'Ci::Build' AND "ci_builds"."name" = 'coverage_fuzzing'
  :api_fuzzing_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE "ci_builds"."type"
    = 'Ci::Build' AND "ci_builds"."name" = 'apifuzzer_fuzz'
  :api_fuzzing_dnd_jobs: SELECT COUNT("ci_builds"."id") FROM "ci_builds" WHERE "ci_builds"."type"
    = 'Ci::Build' AND "ci_builds"."name" = 'apifuzzer_fuzz_dnd'
  :dast_on_demand_pipelines: SELECT COUNT("ci_pipelines"."id") FROM "ci_pipelines"
    WHERE "ci_pipelines"."source" = 13
  :epics_deepest_relationship_level: 0
  :operations_dashboard_default_dashboard: SELECT COUNT("users"."id") FROM "users"
    WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type"
    IN (6, 4)) AND "users"."dashboard" = 8
  :operations_dashboard_users_with_projects_added: SELECT COUNT(DISTINCT "users_ops_dashboard_projects"."user_id")
    FROM "users_ops_dashboard_projects" INNER JOIN "users" ON "users"."id" = "users_ops_dashboard_projects"."user_id"
    WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type"
    IN (6, 4))
:counts_monthly:
  :deployments: SELECT COUNT("deployments"."id") FROM "deployments" WHERE "deployments"."created_at"
    BETWEEN '2021-05-19 06:22:32.820509' AND '2021-06-16 06:22:32.820603'
  :successful_deployments: SELECT COUNT("deployments"."id") FROM "deployments" WHERE
    "deployments"."status" = 2 AND "deployments"."created_at" BETWEEN '2021-05-19
    06:22:32.821066' AND '2021-06-16 06:22:32.821107'
  :failed_deployments: SELECT COUNT("deployments"."id") FROM "deployments" WHERE "deployments"."status"
    = 3 AND "deployments"."created_at" BETWEEN '2021-05-19 06:22:32.821436' AND '2021-06-16
    06:22:32.821475'
  :projects: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."created_at"
    BETWEEN '2021-05-19 06:22:32.822307' AND '2021-06-16 06:22:32.822349'
  :packages: SELECT COUNT("packages_packages"."id") FROM "packages_packages" WHERE
    "packages_packages"."created_at" BETWEEN '2021-05-19 06:22:32.822653' AND '2021-06-16
    06:22:32.822690'
  :personal_snippets: SELECT COUNT("snippets"."id") FROM "snippets" WHERE "snippets"."type"
    = 'PersonalSnippet' AND "snippets"."created_at" BETWEEN '2021-05-19 06:22:32.825000'
    AND '2021-06-16 06:22:32.825041'
  :project_snippets: SELECT COUNT("snippets"."id") FROM "snippets" WHERE "snippets"."type"
    = 'ProjectSnippet' AND "snippets"."created_at" BETWEEN '2021-05-19 06:22:32.825958'
    AND '2021-06-16 06:22:32.826001'
  :projects_with_alerts_created: SELECT COUNT(DISTINCT "alert_management_alerts"."project_id")
    FROM "alert_management_alerts" WHERE "alert_management_alerts"."created_at" BETWEEN
    '2021-05-19 06:22:32.826410' AND '2021-06-16 06:22:32.826451'
  :snippets: SELECT (SELECT COUNT("snippets"."id") FROM "snippets" WHERE "snippets"."type"
    = 'PersonalSnippet' AND "snippets"."created_at" BETWEEN '2021-05-19 06:22:32.825000'
    AND '2021-06-16 06:22:32.825041') + (SELECT COUNT("snippets"."id") FROM "snippets"
    WHERE "snippets"."type" = 'ProjectSnippet' AND "snippets"."created_at" BETWEEN
    '2021-05-19 06:22:32.825958' AND '2021-06-16 06:22:32.826001')
  :aggregated_metrics:
    compliance_features_track_unique_visits_union: 0
    incident_management_alerts_total_unique_counts: 0
    incident_management_incidents_total_unique_counts: 0
    i_testing_paid_monthly_active_user_total: 0
    code_review_group_monthly_active_users: 0
    code_review_category_monthly_active_users: 0
    code_review_extension_category_monthly_active_users: 0
:counts_weekly:
  :aggregated_metrics:
    compliance_features_track_unique_visits_union: 0
    incident_management_alerts_total_unique_counts: 0
    incident_management_incidents_total_unique_counts: 0
    i_testing_paid_monthly_active_user_total: 0
    code_review_group_monthly_active_users: 0
    code_review_category_monthly_active_users: 0
    code_review_extension_category_monthly_active_users: 0
:instance_auto_devops_enabled: true
:container_registry_enabled: false
:dependency_proxy_enabled: false
:gitlab_shared_runners_enabled: true
:gravatar_enabled: true
:ldap_enabled: false
:mattermost_enabled: false
:omniauth_enabled: true
:prometheus_enabled: true
:prometheus_metrics_enabled: true
:reply_by_email_enabled: false
:signup_enabled: true
:web_ide_clientside_preview_enabled: false
:grafana_link_enabled: false
:gitpod_enabled: false
:elasticsearch_enabled:
:license_trial_ends_on:
:geo_enabled: true
:git:
  :version: !ruby/object:Gitlab::VersionInfo
    major: 2
    minor: 32
    patch: 0
:gitaly:
  :version: 14.0.0-rc2-15-g56c571a6b
  :servers: 1
  :clusters: 0
  :filesystems:
  - apfs
:gitlab_pages:
  :enabled: true
  :version: 1.40.0
:container_registry_server:
  :vendor: ''
  :version: ''
:database:
  :adapter: postgresql
  :version: '13.2'
  :pg_system_id: 6938758282327982386
:mail:
  :smtp_server: localhost
:object_store:
  :artifacts:
    :enabled: true
    :object_store:
      :enabled: false
      :direct_upload: true
      :background_upload: true
      :provider: AWS
  :external_diffs:
    :enabled: false
    :object_store:
      :enabled: false
      :direct_upload: true
      :background_upload: true
      :provider: AWS
  :lfs:
    :enabled: true
    :object_store:
      :enabled: false
      :direct_upload: true
      :background_upload: true
      :provider: AWS
  :uploads:
    :enabled:
    :object_store:
      :enabled: false
      :direct_upload: true
      :background_upload: true
      :provider: AWS
  :packages:
    :enabled: true
    :object_store:
      :enabled: false
      :direct_upload: true
      :background_upload: true
      :provider: AWS
:topology:
  :nodes: []
  :duration_s: 0.13626900012604892
  :failures:
  - app_requests: empty_result
  - query_apdex: empty_result
  - node_memory: empty_result
  - node_memory_utilization: empty_result
  - node_cpus: empty_result
  - node_cpu_utilization: empty_result
  - node_uname_info: empty_result
  - service_rss: empty_result
  - service_uss: empty_result
  - service_pss: empty_result
  - service_process_count: empty_result
  - service_workers: empty_result
:usage_activity_by_stage:
  :configure:
    :clusters_applications_cert_managers: SELECT COUNT(DISTINCT "clusters_applications_cert_managers"."clusters.user_id")
      FROM "clusters_applications_cert_managers" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_cert_managers"."cluster_id" WHERE "clusters_applications_cert_managers"."status"
      IN (11, 3, 5)
    :clusters_applications_helm: SELECT COUNT(DISTINCT "clusters_applications_helm"."clusters.user_id")
      FROM "clusters_applications_helm" INNER JOIN "clusters" ON "clusters"."id" =
      "clusters_applications_helm"."cluster_id" WHERE "clusters_applications_helm"."status"
      IN (11, 3, 5)
    :clusters_applications_ingress: SELECT COUNT(DISTINCT "clusters_applications_ingress"."clusters.user_id")
      FROM "clusters_applications_ingress" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_ingress"."cluster_id" WHERE "clusters_applications_ingress"."status"
      IN (11, 3, 5)
    :clusters_applications_knative: SELECT COUNT(DISTINCT "clusters_applications_knative"."clusters.user_id")
      FROM "clusters_applications_knative" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_knative"."cluster_id" WHERE "clusters_applications_knative"."status"
      IN (11, 3, 5)
    :clusters_management_project: SELECT COUNT(DISTINCT "clusters"."user_id") FROM
      "clusters" WHERE "clusters"."management_project_id" IS NOT NULL
    :clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = FALSE
    :clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE
    :clusters_platforms_gke: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      INNER JOIN "cluster_providers_gcp" ON "cluster_providers_gcp"."cluster_id" =
      "clusters"."id" WHERE "clusters"."provider_type" = 1 AND ("cluster_providers_gcp"."status"
      IN (3)) AND "clusters"."enabled" = TRUE
    :clusters_platforms_eks: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      INNER JOIN "cluster_providers_aws" ON "cluster_providers_aws"."cluster_id" =
      "clusters"."id" WHERE "clusters"."provider_type" = 2 AND ("cluster_providers_aws"."status"
      IN (3)) AND "clusters"."enabled" = TRUE
    :clusters_platforms_user: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."provider_type" = 0 AND "clusters"."enabled" = TRUE
    :instance_clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM
      "clusters" WHERE "clusters"."enabled" = FALSE AND "clusters"."cluster_type"
      = 1
    :instance_clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE AND "clusters"."cluster_type" = 1
    :group_clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = FALSE AND "clusters"."cluster_type" = 2
    :group_clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE AND "clusters"."cluster_type" = 2
    :project_clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = FALSE AND "clusters"."cluster_type" = 3
    :project_clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE AND "clusters"."cluster_type" = 3
    :projects_slack_notifications_active: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      AND "services"."type" = 'SlackService'
    :projects_slack_slash_active: SELECT COUNT(DISTINCT "projects"."creator_id") FROM
      "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      AND "services"."type" = 'SlackSlashCommandsService'
  :create:
    :deploy_keys: SELECT COUNT(DISTINCT "keys"."user_id") FROM "keys" WHERE "keys"."type"
      = 'DeployKey'
    :keys: SELECT COUNT(DISTINCT "keys"."user_id") FROM "keys" WHERE ("keys"."type"
      IN ('LDAPKey', 'Key') OR "keys"."type" IS NULL)
    :merge_requests: SELECT COUNT(DISTINCT "merge_requests"."author_id") FROM "merge_requests"
    :projects_with_disable_overriding_approvers_per_merge_request: SELECT COUNT("projects"."id")
      FROM "projects" WHERE "projects"."disable_overriding_approvers_per_merge_request"
      = TRUE
    :projects_without_disable_overriding_approvers_per_merge_request: SELECT COUNT("projects"."id")
      FROM "projects" WHERE ("projects"."disable_overriding_approvers_per_merge_request"
      = FALSE OR "projects"."disable_overriding_approvers_per_merge_request" IS NULL)
    :remote_mirrors: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "remote_mirrors" ON "remote_mirrors"."project_id" = "projects"."id"
      WHERE "remote_mirrors"."enabled" = TRUE
    :snippets: SELECT COUNT(DISTINCT "snippets"."author_id") FROM "snippets"
    :suggestions: SELECT COUNT(DISTINCT "notes"."author_id") FROM "notes" INNER JOIN
      "suggestions" ON "suggestions"."note_id" = "notes"."id"
    :projects_enforcing_code_owner_approval: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "protected_branches" ON "protected_branches"."project_id"
      = "projects"."id" WHERE "protected_branches"."code_owner_approval_required"
      = TRUE
    :projects_with_sectional_code_owner_rules: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_requests.target_project_id")
      FROM "approval_merge_request_rules" INNER JOIN "merge_requests" ON "merge_requests"."id"
      = "approval_merge_request_rules"."merge_request_id" WHERE "approval_merge_request_rules"."rule_type"
      = 2 AND "approval_merge_request_rules"."section" != 'codeowners'
    :merge_requests_with_added_rules: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id")
      FROM "approval_merge_request_rules" LEFT OUTER JOIN "approval_merge_request_rule_sources"
      ON "approval_merge_request_rule_sources"."approval_merge_request_rule_id" =
      "approval_merge_request_rules"."id" WHERE "approval_merge_request_rule_sources"."approval_merge_request_rule_id"
      IS NULL
    :merge_requests_with_optional_codeowners: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id")
      FROM "approval_merge_request_rules" WHERE "approval_merge_request_rules"."rule_type"
      = 2 AND "approval_merge_request_rules"."approvals_required" = 0
    :merge_requests_with_overridden_project_rules: |-
      SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id") FROM "approval_merge_request_rules" WHERE ((EXISTS (
        SELECT
          1
        FROM
          approval_merge_request_rule_sources
        WHERE
          approval_merge_request_rule_sources.approval_merge_request_rule_id = approval_merge_request_rules.id
          AND NOT EXISTS (
            SELECT
              1
            FROM
              approval_project_rules
            WHERE
              approval_project_rules.id = approval_merge_request_rule_sources.approval_project_rule_id
              AND EXISTS (
                SELECT
                  1
                FROM
                  projects
                WHERE
                  projects.id = approval_project_rules.project_id
                  AND projects.disable_overriding_approvers_per_merge_request = FALSE))))
          OR("approval_merge_request_rules"."modified_from_project_rule" = TRUE)
      )
    :merge_requests_with_required_codeowners: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id")
      FROM "approval_merge_request_rules" WHERE "approval_merge_request_rules"."rule_type"
      = 2 AND (approvals_required > 0)
    :projects_imported_from_github: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" WHERE "projects"."import_type" = 'github'
    :projects_with_repositories_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_features" ON "project_features"."project_id"
      = "projects"."id" WHERE "project_features"."repository_access_level" = 20
    :protected_branches: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "protected_branches" ON "protected_branches"."project_id" = "projects"."id"
    :users_using_path_locks: SELECT COUNT(DISTINCT "path_locks"."user_id") FROM "path_locks"
    :users_using_lfs_locks: SELECT COUNT(DISTINCT "lfs_file_locks"."user_id") FROM
      "lfs_file_locks"
    :total_number_of_path_locks: SELECT COUNT("path_locks"."id") FROM "path_locks"
    :total_number_of_locked_files: SELECT COUNT("lfs_file_locks"."id") FROM "lfs_file_locks"
    :approval_project_rules: SELECT COUNT("approval_project_rules"."id") FROM "approval_project_rules"
    :approval_project_rules_with_target_branch: SELECT COUNT("approval_project_rules_protected_branches"."approval_project_rule_id")
      FROM "approval_project_rules_protected_branches"
    :approval_project_rules_with_more_approvers_than_required: 350
    :approval_project_rules_with_less_approvers_than_required: 350
    :approval_project_rules_with_exact_required_approvers: 350
  :enablement:
    :geo_secondary_web_oauth_users: SELECT COUNT(DISTINCT "oauth_access_grants"."resource_owner_id")
      FROM "oauth_access_grants" WHERE "oauth_access_grants"."application_id" IN (SELECT
      "geo_nodes"."oauth_application_id" FROM "geo_nodes" WHERE "geo_nodes"."primary"
      = FALSE)
    :geo_node_usage:
    - repository_verification_enabled: true
      repositories_replication_enabled:
      repositories_synced_count:
      repositories_failed_count:
      attachments_replication_enabled:
      attachments_count:
      attachments_synced_count:
      attachments_failed_count:
      wikis_synced_count:
      wikis_failed_count:
      job_artifacts_replication_enabled:
      job_artifacts_count:
      job_artifacts_synced_count:
      job_artifacts_failed_count:
      repositories_verified_count:
      repositories_verification_failed_count:
      repositories_verification_total_count:
      wikis_verified_count:
      wikis_verification_failed_count:
      wikis_verification_total_count:
      job_artifacts_synced_missing_on_primary_count:
      attachments_synced_missing_on_primary_count:
      repositories_checksummed_count:
      repositories_checksum_failed_count:
      repositories_checksum_mismatch_count:
      repositories_checksum_total_count:
      wikis_checksummed_count:
      wikis_checksum_failed_count:
      wikis_checksum_mismatch_count:
      wikis_checksum_total_count:
      repositories_retrying_verification_count:
      wikis_retrying_verification_count:
      projects_count:
      container_repositories_replication_enabled:
      container_repositories_count:
      container_repositories_synced_count:
      container_repositories_failed_count:
      container_repositories_registry_count:
      design_repositories_replication_enabled:
      design_repositories_count:
      design_repositories_synced_count:
      design_repositories_failed_count:
      lfs_objects_count:
      lfs_objects_checksum_total_count:
      lfs_objects_checksummed_count:
      lfs_objects_checksum_failed_count:
      lfs_objects_synced_count:
      lfs_objects_failed_count:
      lfs_objects_registry_count:
      lfs_objects_verification_total_count:
      lfs_objects_verified_count:
      lfs_objects_verification_failed_count:
      merge_request_diffs_count:
      merge_request_diffs_checksum_total_count:
      merge_request_diffs_checksummed_count:
      merge_request_diffs_checksum_failed_count:
      merge_request_diffs_synced_count:
      merge_request_diffs_failed_count:
      merge_request_diffs_registry_count:
      merge_request_diffs_verification_total_count:
      merge_request_diffs_verified_count:
      merge_request_diffs_verification_failed_count:
      package_files_count:
      package_files_checksum_total_count:
      package_files_checksummed_count:
      package_files_checksum_failed_count:
      package_files_synced_count:
      package_files_failed_count:
      package_files_registry_count:
      package_files_verification_total_count:
      package_files_verified_count:
      package_files_verification_failed_count:
      terraform_state_versions_count:
      terraform_state_versions_checksum_total_count:
      terraform_state_versions_checksummed_count:
      terraform_state_versions_checksum_failed_count:
      terraform_state_versions_synced_count:
      terraform_state_versions_failed_count:
      terraform_state_versions_registry_count:
      terraform_state_versions_verification_total_count:
      terraform_state_versions_verified_count:
      terraform_state_versions_verification_failed_count:
      snippet_repositories_count:
      snippet_repositories_checksum_total_count:
      snippet_repositories_checksummed_count:
      snippet_repositories_checksum_failed_count:
      snippet_repositories_synced_count:
      snippet_repositories_failed_count:
      snippet_repositories_registry_count:
      snippet_repositories_verification_total_count:
      snippet_repositories_verified_count:
      snippet_repositories_verification_failed_count:
      group_wiki_repositories_count:
      group_wiki_repositories_checksum_total_count:
      group_wiki_repositories_checksummed_count:
      group_wiki_repositories_checksum_failed_count:
      group_wiki_repositories_synced_count:
      group_wiki_repositories_failed_count:
      group_wiki_repositories_registry_count:
      group_wiki_repositories_verification_total_count:
      group_wiki_repositories_verified_count:
      group_wiki_repositories_verification_failed_count:
      pipeline_artifacts_count:
      pipeline_artifacts_checksum_total_count:
      pipeline_artifacts_checksummed_count:
      pipeline_artifacts_checksum_failed_count:
      pipeline_artifacts_synced_count:
      pipeline_artifacts_failed_count:
      pipeline_artifacts_registry_count:
      pipeline_artifacts_verification_total_count:
      pipeline_artifacts_verified_count:
      pipeline_artifacts_verification_failed_count:
      git_fetch_event_count_weekly:
      git_push_event_count_weekly:
    - repository_verification_enabled: true
      repositories_replication_enabled:
      repositories_synced_count:
      repositories_failed_count:
      attachments_replication_enabled:
      attachments_count:
      attachments_synced_count:
      attachments_failed_count:
      wikis_synced_count:
      wikis_failed_count:
      job_artifacts_replication_enabled:
      job_artifacts_count:
      job_artifacts_synced_count:
      job_artifacts_failed_count:
      repositories_verified_count:
      repositories_verification_failed_count:
      repositories_verification_total_count:
      wikis_verified_count:
      wikis_verification_failed_count:
      wikis_verification_total_count:
      job_artifacts_synced_missing_on_primary_count:
      attachments_synced_missing_on_primary_count:
      repositories_checksummed_count:
      repositories_checksum_failed_count:
      repositories_checksum_mismatch_count:
      repositories_checksum_total_count:
      wikis_checksummed_count:
      wikis_checksum_failed_count:
      wikis_checksum_mismatch_count:
      wikis_checksum_total_count:
      repositories_retrying_verification_count:
      wikis_retrying_verification_count:
      projects_count:
      container_repositories_replication_enabled:
      container_repositories_count:
      container_repositories_synced_count:
      container_repositories_failed_count:
      container_repositories_registry_count:
      design_repositories_replication_enabled:
      design_repositories_count:
      design_repositories_synced_count:
      design_repositories_failed_count:
      lfs_objects_count:
      lfs_objects_checksum_total_count:
      lfs_objects_checksummed_count:
      lfs_objects_checksum_failed_count:
      lfs_objects_synced_count:
      lfs_objects_failed_count:
      lfs_objects_registry_count:
      lfs_objects_verification_total_count:
      lfs_objects_verified_count:
      lfs_objects_verification_failed_count:
      merge_request_diffs_count:
      merge_request_diffs_checksum_total_count:
      merge_request_diffs_checksummed_count:
      merge_request_diffs_checksum_failed_count:
      merge_request_diffs_synced_count:
      merge_request_diffs_failed_count:
      merge_request_diffs_registry_count:
      merge_request_diffs_verification_total_count:
      merge_request_diffs_verified_count:
      merge_request_diffs_verification_failed_count:
      package_files_count:
      package_files_checksum_total_count:
      package_files_checksummed_count:
      package_files_checksum_failed_count:
      package_files_synced_count:
      package_files_failed_count:
      package_files_registry_count:
      package_files_verification_total_count:
      package_files_verified_count:
      package_files_verification_failed_count:
      terraform_state_versions_count:
      terraform_state_versions_checksum_total_count:
      terraform_state_versions_checksummed_count:
      terraform_state_versions_checksum_failed_count:
      terraform_state_versions_synced_count:
      terraform_state_versions_failed_count:
      terraform_state_versions_registry_count:
      terraform_state_versions_verification_total_count:
      terraform_state_versions_verified_count:
      terraform_state_versions_verification_failed_count:
      snippet_repositories_count:
      snippet_repositories_checksum_total_count:
      snippet_repositories_checksummed_count:
      snippet_repositories_checksum_failed_count:
      snippet_repositories_synced_count:
      snippet_repositories_failed_count:
      snippet_repositories_registry_count:
      snippet_repositories_verification_total_count:
      snippet_repositories_verified_count:
      snippet_repositories_verification_failed_count:
      group_wiki_repositories_count:
      group_wiki_repositories_checksum_total_count:
      group_wiki_repositories_checksummed_count:
      group_wiki_repositories_checksum_failed_count:
      group_wiki_repositories_synced_count:
      group_wiki_repositories_failed_count:
      group_wiki_repositories_registry_count:
      group_wiki_repositories_verification_total_count:
      group_wiki_repositories_verified_count:
      group_wiki_repositories_verification_failed_count:
      pipeline_artifacts_count:
      pipeline_artifacts_checksum_total_count:
      pipeline_artifacts_checksummed_count:
      pipeline_artifacts_checksum_failed_count:
      pipeline_artifacts_synced_count:
      pipeline_artifacts_failed_count:
      pipeline_artifacts_registry_count:
      pipeline_artifacts_verification_total_count:
      pipeline_artifacts_verified_count:
      pipeline_artifacts_verification_failed_count:
      git_fetch_event_count_weekly:
      git_push_event_count_weekly:
    - repository_verification_enabled: true
      repositories_replication_enabled:
      repositories_synced_count:
      repositories_failed_count:
      attachments_replication_enabled:
      attachments_count:
      attachments_synced_count:
      attachments_failed_count:
      wikis_synced_count:
      wikis_failed_count:
      job_artifacts_replication_enabled:
      job_artifacts_count:
      job_artifacts_synced_count:
      job_artifacts_failed_count:
      repositories_verified_count:
      repositories_verification_failed_count:
      repositories_verification_total_count:
      wikis_verified_count:
      wikis_verification_failed_count:
      wikis_verification_total_count:
      job_artifacts_synced_missing_on_primary_count:
      attachments_synced_missing_on_primary_count:
      repositories_checksummed_count:
      repositories_checksum_failed_count:
      repositories_checksum_mismatch_count:
      repositories_checksum_total_count:
      wikis_checksummed_count:
      wikis_checksum_failed_count:
      wikis_checksum_mismatch_count:
      wikis_checksum_total_count:
      repositories_retrying_verification_count:
      wikis_retrying_verification_count:
      projects_count:
      container_repositories_replication_enabled:
      container_repositories_count:
      container_repositories_synced_count:
      container_repositories_failed_count:
      container_repositories_registry_count:
      design_repositories_replication_enabled:
      design_repositories_count:
      design_repositories_synced_count:
      design_repositories_failed_count:
      lfs_objects_count:
      lfs_objects_checksum_total_count:
      lfs_objects_checksummed_count:
      lfs_objects_checksum_failed_count:
      lfs_objects_synced_count:
      lfs_objects_failed_count:
      lfs_objects_registry_count:
      lfs_objects_verification_total_count:
      lfs_objects_verified_count:
      lfs_objects_verification_failed_count:
      merge_request_diffs_count:
      merge_request_diffs_checksum_total_count:
      merge_request_diffs_checksummed_count:
      merge_request_diffs_checksum_failed_count:
      merge_request_diffs_synced_count:
      merge_request_diffs_failed_count:
      merge_request_diffs_registry_count:
      merge_request_diffs_verification_total_count:
      merge_request_diffs_verified_count:
      merge_request_diffs_verification_failed_count:
      package_files_count:
      package_files_checksum_total_count:
      package_files_checksummed_count:
      package_files_checksum_failed_count:
      package_files_synced_count:
      package_files_failed_count:
      package_files_registry_count:
      package_files_verification_total_count:
      package_files_verified_count:
      package_files_verification_failed_count:
      terraform_state_versions_count:
      terraform_state_versions_checksum_total_count:
      terraform_state_versions_checksummed_count:
      terraform_state_versions_checksum_failed_count:
      terraform_state_versions_synced_count:
      terraform_state_versions_failed_count:
      terraform_state_versions_registry_count:
      terraform_state_versions_verification_total_count:
      terraform_state_versions_verified_count:
      terraform_state_versions_verification_failed_count:
      snippet_repositories_count:
      snippet_repositories_checksum_total_count:
      snippet_repositories_checksummed_count:
      snippet_repositories_checksum_failed_count:
      snippet_repositories_synced_count:
      snippet_repositories_failed_count:
      snippet_repositories_registry_count:
      snippet_repositories_verification_total_count:
      snippet_repositories_verified_count:
      snippet_repositories_verification_failed_count:
      group_wiki_repositories_count:
      group_wiki_repositories_checksum_total_count:
      group_wiki_repositories_checksummed_count:
      group_wiki_repositories_checksum_failed_count:
      group_wiki_repositories_synced_count:
      group_wiki_repositories_failed_count:
      group_wiki_repositories_registry_count:
      group_wiki_repositories_verification_total_count:
      group_wiki_repositories_verified_count:
      group_wiki_repositories_verification_failed_count:
      pipeline_artifacts_count:
      pipeline_artifacts_checksum_total_count:
      pipeline_artifacts_checksummed_count:
      pipeline_artifacts_checksum_failed_count:
      pipeline_artifacts_synced_count:
      pipeline_artifacts_failed_count:
      pipeline_artifacts_registry_count:
      pipeline_artifacts_verification_total_count:
      pipeline_artifacts_verified_count:
      pipeline_artifacts_verification_failed_count:
      git_fetch_event_count_weekly:
      git_push_event_count_weekly:
  :manage:
    :events: SELECT COUNT(DISTINCT "events"."author_id") FROM "events"
    :groups: SELECT COUNT(DISTINCT "members"."user_id") FROM "members" WHERE "members"."type"
      = 'GroupMember' AND "members"."source_type" = 'Namespace'
    :users_created: SELECT COUNT("users"."id") FROM "users"
    :omniauth_providers:
    - google_oauth2
    :user_auth_by_provider:
      two-factor: SELECT COUNT(DISTINCT "authentication_events"."user_id") FROM "authentication_events"
        WHERE "authentication_events"."result" = 1 AND "authentication_events"."provider"
        = 'two-factor'
      two-factor-via-u2f-device: SELECT COUNT(DISTINCT "authentication_events"."user_id")
        FROM "authentication_events" WHERE "authentication_events"."result" = 1 AND
        "authentication_events"."provider" = 'two-factor-via-u2f-device'
      two-factor-via-webauthn-device: SELECT COUNT(DISTINCT "authentication_events"."user_id")
        FROM "authentication_events" WHERE "authentication_events"."result" = 1 AND
        "authentication_events"."provider" = 'two-factor-via-webauthn-device'
      standard: SELECT COUNT(DISTINCT "authentication_events"."user_id") FROM "authentication_events"
        WHERE "authentication_events"."result" = 1 AND "authentication_events"."provider"
        = 'standard'
      google_oauth2: SELECT COUNT(DISTINCT "authentication_events"."user_id") FROM
        "authentication_events" WHERE "authentication_events"."result" = 1 AND "authentication_events"."provider"
        = 'google_oauth2'
    :unique_users_all_imports: SELECT (SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" WHERE "projects"."import_type" IS NOT NULL) + (SELECT COUNT(DISTINCT
      "bulk_imports"."user_id") FROM "bulk_imports") + (SELECT COUNT(DISTINCT "jira_imports"."user_id")
      FROM "jira_imports") + (SELECT COUNT(DISTINCT "csv_issue_imports"."user_id")
      FROM "csv_issue_imports") + (SELECT COUNT(DISTINCT "group_import_states"."user_id")
      FROM "group_import_states")
    :bulk_imports:
      :gitlab: -1000
      :gitlab_v1: SELECT COUNT("bulk_imports"."id") FROM "bulk_imports" WHERE "bulk_imports"."source_type"
        = 0
    :project_imports:
      :gitlab_project: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitlab_project' AND "projects"."import_type" IS NOT NULL
      :gitlab: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitlab' AND "projects"."import_type" IS NOT NULL
      :github: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'github' AND "projects"."import_type" IS NOT NULL
      :bitbucket: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'bitbucket' AND "projects"."import_type" IS NOT NULL
      :bitbucket_server: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'bitbucket_server' AND "projects"."import_type" IS NOT NULL
      :gitea: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitea' AND "projects"."import_type" IS NOT NULL
      :git: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'git' AND "projects"."import_type" IS NOT NULL
      :manifest: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'manifest' AND "projects"."import_type" IS NOT NULL
      :gitlab_migration: SELECT COUNT("bulk_import_entities"."id") FROM "bulk_import_entities"
        WHERE "bulk_import_entities"."source_type" = 1
      :total: SELECT (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitlab_project' AND "projects"."import_type" IS NOT NULL) + (SELECT COUNT("projects"."id")
        FROM "projects" WHERE "projects"."import_type" = 'gitlab' AND "projects"."import_type"
        IS NOT NULL) + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'github' AND "projects"."import_type" IS NOT NULL) + (SELECT COUNT("projects"."id")
        FROM "projects" WHERE "projects"."import_type" = 'bitbucket' AND "projects"."import_type"
        IS NOT NULL) + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'bitbucket_server' AND "projects"."import_type" IS NOT NULL) + (SELECT COUNT("projects"."id")
        FROM "projects" WHERE "projects"."import_type" = 'gitea' AND "projects"."import_type"
        IS NOT NULL) + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'git' AND "projects"."import_type" IS NOT NULL) + (SELECT COUNT("projects"."id")
        FROM "projects" WHERE "projects"."import_type" = 'manifest' AND "projects"."import_type"
        IS NOT NULL) + (SELECT COUNT("bulk_import_entities"."id") FROM "bulk_import_entities"
        WHERE "bulk_import_entities"."source_type" = 1)
    :issue_imports:
      :jira: SELECT COUNT("jira_imports"."id") FROM "jira_imports"
      :fogbugz: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'fogbugz' AND "projects"."import_type" IS NOT NULL
      :phabricator: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'phabricator' AND "projects"."import_type" IS NOT NULL
      :csv: SELECT COUNT("csv_issue_imports"."id") FROM "csv_issue_imports"
    :group_imports:
      :group_import: SELECT COUNT("group_import_states"."group_id") FROM "group_import_states"
      :gitlab_migration: SELECT COUNT("bulk_import_entities"."id") FROM "bulk_import_entities"
        WHERE "bulk_import_entities"."source_type" = 0
    :projects_imported:
      :total: -1000
      :gitlab_project: -1000
      :gitlab: -1000
      :github: -1000
      :bitbucket: -1000
      :bitbucket_server: -1000
      :gitea: -1000
      :git: -1000
      :manifest: -1000
    :issues_imported:
      :jira: -1000
      :fogbugz: -1000
      :phabricator: -1000
      :csv: -1000
    :groups_imported: -1000
    :ldap_keys: SELECT COUNT(DISTINCT "keys"."user_id") FROM "keys" WHERE "keys"."type"
      = 'LDAPKey'
    :ldap_users: SELECT COUNT(DISTINCT "members"."user_id") FROM "members" WHERE "members"."type"
      = 'GroupMember' AND "members"."source_type" = 'Namespace' AND "members"."ldap"
      = TRUE
    :value_stream_management_customized_group_stages: SELECT COUNT("analytics_cycle_analytics_group_stages"."id")
      FROM "analytics_cycle_analytics_group_stages" WHERE "analytics_cycle_analytics_group_stages"."custom"
      = TRUE
    :projects_with_compliance_framework: SELECT COUNT("project_compliance_framework_settings"."project_id")
      FROM "project_compliance_framework_settings"
    :custom_compliance_frameworks: SELECT COUNT("compliance_management_frameworks"."id")
      FROM "compliance_management_frameworks"
    :ldap_servers: 0
    :ldap_group_sync_enabled: false
    :ldap_admin_sync_enabled: false
    :group_saml_enabled: false
  :monitor:
    :clusters: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
    :clusters_applications_prometheus: SELECT COUNT(DISTINCT "clusters_applications_prometheus"."clusters.user_id")
      FROM "clusters_applications_prometheus" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_prometheus"."cluster_id" WHERE "clusters_applications_prometheus"."status"
      IN (11, 3, 5)
    :operations_dashboard_default_dashboard: SELECT COUNT("users"."id") FROM "users"
      WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type"
      IN (6, 4)) AND "users"."dashboard" = 8
    :projects_with_tracing_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_tracing_settings" ON "project_tracing_settings"."project_id"
      = "projects"."id"
    :projects_with_error_tracking_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_error_tracking_settings" ON "project_error_tracking_settings"."project_id"
      = "projects"."id" WHERE "project_error_tracking_settings"."enabled" = TRUE
    :projects_with_incidents: SELECT COUNT(DISTINCT "issues"."project_id") FROM "issues"
      WHERE "issues"."issue_type" = 1
    :projects_with_alert_incidents: SELECT COUNT(DISTINCT "issues"."project_id") FROM
      "issues" INNER JOIN "alert_management_alerts" ON "alert_management_alerts"."issue_id"
      = "issues"."id" WHERE "issues"."issue_type" = 1
    :projects_with_enabled_alert_integrations_histogram: WITH "count_cte" AS MATERIALIZED
      (SELECT COUNT(*) AS count_grouped FROM "alert_management_http_integrations"
      WHERE "alert_management_http_integrations"."active" = TRUE GROUP BY "alert_management_http_integrations"."project_id")
      SELECT WIDTH_BUCKET("count_cte"."count_grouped", 1, 100, 99) AS buckets, "count_cte"."count"
      FROM "count_cte" GROUP BY buckets ORDER BY buckets
    :operations_dashboard_users_with_projects_added: SELECT COUNT(DISTINCT "users_ops_dashboard_projects"."user_id")
      FROM "users_ops_dashboard_projects" INNER JOIN "users" ON "users"."id" = "users_ops_dashboard_projects"."user_id"
      WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type"
      IN (6, 4))
    :projects_incident_sla_enabled: SELECT COUNT("projects"."id") FROM "projects"
      INNER JOIN "project_incident_management_settings" ON "project_incident_management_settings"."project_id"
      = "projects"."id" WHERE "project_incident_management_settings"."sla_timer" =
      TRUE
  :package:
    :projects_with_packages: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "packages_packages" ON "packages_packages"."project_id" = "projects"."id"
  :plan:
    :issues: SELECT COUNT(DISTINCT "issues"."author_id") FROM "issues"
    :notes: SELECT COUNT(DISTINCT "notes"."author_id") FROM "notes"
    :projects: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
    :todos: SELECT COUNT(DISTINCT "todos"."author_id") FROM "todos"
    :service_desk_enabled_projects: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" WHERE "projects"."service_desk_enabled" = TRUE
    :service_desk_issues: SELECT COUNT("issues"."id") FROM "issues" WHERE "issues"."author_id"
      = 23
    :projects_jira_active: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "services" ON "services"."project_id" = "projects"."id" WHERE "services"."type"
      = 'JiraService' AND "services"."active" = TRUE
    :projects_jira_dvcs_cloud_active: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      INNER JOIN "project_feature_usages" ON "project_feature_usages"."project_id"
      = "projects"."id" WHERE "services"."type" = 'JiraService' AND "services"."active"
      = TRUE AND "project_feature_usages"."jira_dvcs_cloud_last_sync_at" IS NOT NULL
    :projects_jira_dvcs_server_active: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      INNER JOIN "project_feature_usages" ON "project_feature_usages"."project_id"
      = "projects"."id" WHERE "services"."type" = 'JiraService' AND "services"."active"
      = TRUE AND "project_feature_usages"."jira_dvcs_server_last_sync_at" IS NOT NULL
    :assignee_lists: SELECT COUNT(DISTINCT "lists"."user_id") FROM "lists" WHERE "lists"."list_type"
      = 3
    :epics: SELECT COUNT(DISTINCT "epics"."author_id") FROM "epics"
    :label_lists: SELECT COUNT(DISTINCT "lists"."user_id") FROM "lists" WHERE "lists"."list_type"
      = 1
    :milestone_lists: SELECT COUNT(DISTINCT "lists"."user_id") FROM "lists" WHERE
      "lists"."list_type" = 4
  :release:
    :deployments: SELECT COUNT(DISTINCT "deployments"."user_id") FROM "deployments"
    :failed_deployments: SELECT COUNT(DISTINCT "deployments"."user_id") FROM "deployments"
      WHERE "deployments"."status" = 3
    :releases: SELECT COUNT(DISTINCT "releases"."author_id") FROM "releases"
    :successful_deployments: SELECT COUNT(DISTINCT "deployments"."user_id") FROM "deployments"
      WHERE "deployments"."status" = 2
    :projects_mirrored_with_pipelines_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_features" ON "project_features"."project_id"
      = "projects"."id" WHERE "projects"."mirror" = TRUE AND "projects"."mirror_trigger_builds"
      = TRUE AND "project_features"."builds_access_level" = 20
  :secure:
    :user_preferences_group_overview_security_dashboard: SELECT COUNT("users"."id")
      FROM "users" WHERE ("users"."state" IN ('active')) AND ("users"."user_type"
      IS NULL OR "users"."user_type" IN (6, 4)) AND "users"."group_view" = 2
    :user_container_scanning_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'container_scanning'
    :user_dast_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds"
      WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'dast'
    :user_dependency_scanning_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'dependency_scanning'
    :user_license_management_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'license_management'
    :user_sast_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds"
      WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'sast'
    :user_secret_detection_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'secret_detection'
    :user_coverage_fuzzing_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'coverage_fuzzing'
    :user_api_fuzzing_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds"
      WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'apifuzzer_fuzz'
    :user_api_fuzzing_dnd_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'apifuzzer_fuzz_dnd'
    :sast_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans" INNER
      JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND "ci_builds"."type"
      = 'Ci::Build' WHERE "security_scans"."scan_type" = 1 AND ("ci_builds"."retried"
      = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status" IN ('success'))
    :dependency_scanning_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 2 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success'))
    :container_scanning_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 3 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success'))
    :dast_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans" INNER
      JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND "ci_builds"."type"
      = 'Ci::Build' WHERE "security_scans"."scan_type" = 4 AND ("ci_builds"."retried"
      = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status" IN ('success'))
    :secret_detection_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 5 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success'))
    :coverage_fuzzing_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 6 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success'))
    :api_fuzzing_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 7 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success'))
    :user_unique_users_all_secure_scanners: SELECT COUNT(DISTINCT "ci_builds"."user_id")
      FROM "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name"
      IN ('container_scanning', 'dast', 'dependency_scanning', 'license_management',
      'license_scanning', 'sast', 'secret_detection', 'coverage_fuzzing', 'apifuzzer_fuzz',
      'apifuzzer_fuzz_dnd')
  :verify:
    :ci_builds: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds" WHERE
      "ci_builds"."type" = 'Ci::Build'
    :ci_external_pipelines: SELECT COUNT(DISTINCT "ci_pipelines"."user_id") FROM "ci_pipelines"
      WHERE "ci_pipelines"."source" = 6
    :ci_internal_pipelines: SELECT COUNT(DISTINCT "ci_pipelines"."user_id") FROM "ci_pipelines"
      WHERE ("ci_pipelines"."source" IN (1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13) OR
      "ci_pipelines"."source" IS NULL)
    :ci_pipeline_config_auto_devops: SELECT COUNT(DISTINCT "ci_pipelines"."user_id")
      FROM "ci_pipelines" WHERE "ci_pipelines"."config_source" = 2
    :ci_pipeline_config_repository: SELECT COUNT(DISTINCT "ci_pipelines"."user_id")
      FROM "ci_pipelines" WHERE "ci_pipelines"."config_source" = 1
    :ci_pipeline_schedules: SELECT COUNT(DISTINCT "ci_pipeline_schedules"."owner_id")
      FROM "ci_pipeline_schedules"
    :ci_pipelines: SELECT COUNT(DISTINCT "ci_pipelines"."user_id") FROM "ci_pipelines"
    :ci_triggers: SELECT COUNT(DISTINCT "ci_triggers"."owner_id") FROM "ci_triggers"
    :clusters_applications_runner: SELECT COUNT(DISTINCT "clusters_applications_runners"."clusters.user_id")
      FROM "clusters_applications_runners" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_runners"."cluster_id" WHERE "clusters_applications_runners"."status"
      IN (11, 3, 5)
    :projects_reporting_ci_cd_back_to_github: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      AND "services"."type" = 'GithubService' WHERE "services"."type" = 'GithubService'
      AND "services"."pipeline_events" = TRUE AND "services"."active" = TRUE
:usage_activity_by_stage_monthly:
  :configure:
    :clusters_applications_cert_managers: SELECT COUNT(DISTINCT "clusters_applications_cert_managers"."clusters.user_id")
      FROM "clusters_applications_cert_managers" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_cert_managers"."cluster_id" WHERE "clusters_applications_cert_managers"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "clusters_applications_cert_managers"."status"
      IN (11, 3, 5)
    :clusters_applications_helm: SELECT COUNT(DISTINCT "clusters_applications_helm"."clusters.user_id")
      FROM "clusters_applications_helm" INNER JOIN "clusters" ON "clusters"."id" =
      "clusters_applications_helm"."cluster_id" WHERE "clusters_applications_helm"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "clusters_applications_helm"."status"
      IN (11, 3, 5)
    :clusters_applications_ingress: SELECT COUNT(DISTINCT "clusters_applications_ingress"."clusters.user_id")
      FROM "clusters_applications_ingress" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_ingress"."cluster_id" WHERE "clusters_applications_ingress"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "clusters_applications_ingress"."status"
      IN (11, 3, 5)
    :clusters_applications_knative: SELECT COUNT(DISTINCT "clusters_applications_knative"."clusters.user_id")
      FROM "clusters_applications_knative" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_knative"."cluster_id" WHERE "clusters_applications_knative"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "clusters_applications_knative"."status"
      IN (11, 3, 5)
    :clusters_management_project: SELECT COUNT(DISTINCT "clusters"."user_id") FROM
      "clusters" WHERE "clusters"."management_project_id" IS NOT NULL AND "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = FALSE AND "clusters"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE AND "clusters"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :clusters_platforms_gke: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      INNER JOIN "cluster_providers_gcp" ON "cluster_providers_gcp"."cluster_id" =
      "clusters"."id" WHERE "clusters"."provider_type" = 1 AND ("cluster_providers_gcp"."status"
      IN (3)) AND "clusters"."enabled" = TRUE AND "clusters"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :clusters_platforms_eks: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      INNER JOIN "cluster_providers_aws" ON "cluster_providers_aws"."cluster_id" =
      "clusters"."id" WHERE "clusters"."provider_type" = 2 AND ("cluster_providers_aws"."status"
      IN (3)) AND "clusters"."enabled" = TRUE AND "clusters"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :clusters_platforms_user: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."provider_type" = 0 AND "clusters"."enabled" = TRUE AND "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :instance_clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM
      "clusters" WHERE "clusters"."enabled" = FALSE AND "clusters"."cluster_type"
      = 1 AND "clusters"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :instance_clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE AND "clusters"."cluster_type" = 1 AND "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :group_clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = FALSE AND "clusters"."cluster_type" = 2 AND "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :group_clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE AND "clusters"."cluster_type" = 2 AND "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :project_clusters_disabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = FALSE AND "clusters"."cluster_type" = 3 AND "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :project_clusters_enabled: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters"
      WHERE "clusters"."enabled" = TRUE AND "clusters"."cluster_type" = 3 AND "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_slack_notifications_active: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      AND "services"."type" = 'SlackService' WHERE "projects"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_slack_slash_active: SELECT COUNT(DISTINCT "projects"."creator_id") FROM
      "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      AND "services"."type" = 'SlackSlashCommandsService' WHERE "projects"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
  :create:
    :deploy_keys: SELECT COUNT(DISTINCT "keys"."user_id") FROM "keys" WHERE "keys"."type"
      = 'DeployKey' AND "keys"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
      '2021-06-16 06:22:33.379850'
    :keys: SELECT COUNT(DISTINCT "keys"."user_id") FROM "keys" WHERE ("keys"."type"
      IN ('LDAPKey', 'Key') OR "keys"."type" IS NULL) AND "keys"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :merge_requests: SELECT COUNT(DISTINCT "merge_requests"."author_id") FROM "merge_requests"
      WHERE "merge_requests"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
      '2021-06-16 06:22:33.379850'
    :projects_with_disable_overriding_approvers_per_merge_request: SELECT COUNT("projects"."id")
      FROM "projects" WHERE "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850' AND "projects"."disable_overriding_approvers_per_merge_request"
      = TRUE
    :projects_without_disable_overriding_approvers_per_merge_request: SELECT COUNT("projects"."id")
      FROM "projects" WHERE "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850' AND ("projects"."disable_overriding_approvers_per_merge_request"
      = FALSE OR "projects"."disable_overriding_approvers_per_merge_request" IS NULL)
    :remote_mirrors: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "remote_mirrors" ON "remote_mirrors"."project_id" = "projects"."id"
      WHERE "remote_mirrors"."enabled" = TRUE AND "projects"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :snippets: SELECT COUNT(DISTINCT "snippets"."author_id") FROM "snippets" WHERE
      "snippets"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :suggestions: SELECT COUNT(DISTINCT "notes"."author_id") FROM "notes" INNER JOIN
      "suggestions" ON "suggestions"."note_id" = "notes"."id" WHERE "notes"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :merge_requests_users:
      :redis_usage_data_block: "#<Proc:0x00007fc43fc1cfe0 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:472>"
    :action_monthly_active_users_project_repo:
      :redis_usage_data_block: "#<Proc:0x00007fc43fc1cea0 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:777>"
    :action_monthly_active_users_design_management:
      :redis_usage_data_block: "#<Proc:0x00007fc43fc1cdd8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:777>"
    :action_monthly_active_users_wiki_repo:
      :redis_usage_data_block: "#<Proc:0x00007fc43fc1cd10 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:777>"
    :action_monthly_active_users_git_write:
      :redis_usage_data_block: "#<Proc:0x00007fc43fc1cc48 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:777>"
    :action_monthly_active_users_web_ide_edit:
      :redis_usage_data_block: "#<Proc:0x00007fc3c8425598 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:785>"
    :action_monthly_active_users_sfe_edit:
      :redis_usage_data_block: "#<Proc:0x00007fc3c84253b8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:786>"
    :action_monthly_active_users_snippet_editor_edit:
      :redis_usage_data_block: "#<Proc:0x00007fc3c8425228 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:787>"
    :action_monthly_active_users_sse_edit:
      :redis_usage_data_block: "#<Proc:0x00007fc3c8425098 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:788>"
    :action_monthly_active_users_ide_edit:
      :redis_usage_data_block: "#<Proc:0x00007fc3c8424d28 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:789>"
    :projects_enforcing_code_owner_approval: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "protected_branches" ON "protected_branches"."project_id"
      = "projects"."id" WHERE "protected_branches"."code_owner_approval_required"
      = TRUE AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
      '2021-06-16 06:22:33.379850'
    :projects_with_sectional_code_owner_rules: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_requests.target_project_id")
      FROM "approval_merge_request_rules" INNER JOIN "merge_requests" ON "merge_requests"."id"
      = "approval_merge_request_rules"."merge_request_id" WHERE "approval_merge_request_rules"."rule_type"
      = 2 AND "approval_merge_request_rules"."section" != 'codeowners' AND "approval_merge_request_rules"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :merge_requests_with_added_rules: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id")
      FROM "approval_merge_request_rules" LEFT OUTER JOIN "approval_merge_request_rule_sources"
      ON "approval_merge_request_rule_sources"."approval_merge_request_rule_id" =
      "approval_merge_request_rules"."id" WHERE "approval_merge_request_rules"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "approval_merge_request_rule_sources"."approval_merge_request_rule_id"
      IS NULL
    :merge_requests_with_optional_codeowners: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id")
      FROM "approval_merge_request_rules" WHERE "approval_merge_request_rules"."rule_type"
      = 2 AND "approval_merge_request_rules"."approvals_required" = 0 AND "approval_merge_request_rules"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :merge_requests_with_overridden_project_rules: |-
      SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id") FROM "approval_merge_request_rules" WHERE "approval_merge_request_rules"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND ((EXISTS (
        SELECT
          1
        FROM
          approval_merge_request_rule_sources
        WHERE
          approval_merge_request_rule_sources.approval_merge_request_rule_id = approval_merge_request_rules.id
          AND NOT EXISTS (
            SELECT
              1
            FROM
              approval_project_rules
            WHERE
              approval_project_rules.id = approval_merge_request_rule_sources.approval_project_rule_id
              AND EXISTS (
                SELECT
                  1
                FROM
                  projects
                WHERE
                  projects.id = approval_project_rules.project_id
                  AND projects.disable_overriding_approvers_per_merge_request = FALSE))))
          OR("approval_merge_request_rules"."modified_from_project_rule" = TRUE)
      )
    :merge_requests_with_required_codeowners: SELECT COUNT(DISTINCT "approval_merge_request_rules"."merge_request_id")
      FROM "approval_merge_request_rules" WHERE "approval_merge_request_rules"."rule_type"
      = 2 AND (approvals_required > 0) AND "approval_merge_request_rules"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_imported_from_github: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" WHERE "projects"."import_type" = 'github' AND "projects"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_with_repositories_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_features" ON "project_features"."project_id"
      = "projects"."id" WHERE "project_features"."repository_access_level" = 20 AND
      "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :protected_branches: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "protected_branches" ON "protected_branches"."project_id" = "projects"."id"
      WHERE "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :users_using_path_locks: SELECT COUNT(DISTINCT "path_locks"."user_id") FROM "path_locks"
      WHERE "path_locks"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :users_using_lfs_locks: SELECT COUNT(DISTINCT "lfs_file_locks"."user_id") FROM
      "lfs_file_locks" WHERE "lfs_file_locks"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :total_number_of_path_locks: SELECT COUNT("path_locks"."id") FROM "path_locks"
      WHERE "path_locks"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :total_number_of_locked_files: SELECT COUNT("lfs_file_locks"."id") FROM "lfs_file_locks"
      WHERE "lfs_file_locks"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
      '2021-06-16 06:22:33.379850'
    :approval_project_rules: SELECT COUNT("approval_project_rules"."id") FROM "approval_project_rules"
    :approval_project_rules_with_target_branch: SELECT COUNT("approval_project_rules_protected_branches"."approval_project_rule_id")
      FROM "approval_project_rules_protected_branches"
    :approval_project_rules_with_more_approvers_than_required: 350
    :approval_project_rules_with_less_approvers_than_required: 350
    :approval_project_rules_with_exact_required_approvers: 350
  :enablement:
    :geo_secondary_web_oauth_users: SELECT COUNT(DISTINCT "oauth_access_grants"."resource_owner_id")
      FROM "oauth_access_grants" WHERE "oauth_access_grants"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "oauth_access_grants"."application_id"
      IN (SELECT "geo_nodes"."oauth_application_id" FROM "geo_nodes" WHERE "geo_nodes"."primary"
      = FALSE)
    :geo_node_usage:
    - repository_verification_enabled: true
      repositories_replication_enabled:
      repositories_synced_count:
      repositories_failed_count:
      attachments_replication_enabled:
      attachments_count:
      attachments_synced_count:
      attachments_failed_count:
      wikis_synced_count:
      wikis_failed_count:
      job_artifacts_replication_enabled:
      job_artifacts_count:
      job_artifacts_synced_count:
      job_artifacts_failed_count:
      repositories_verified_count:
      repositories_verification_failed_count:
      repositories_verification_total_count:
      wikis_verified_count:
      wikis_verification_failed_count:
      wikis_verification_total_count:
      job_artifacts_synced_missing_on_primary_count:
      attachments_synced_missing_on_primary_count:
      repositories_checksummed_count:
      repositories_checksum_failed_count:
      repositories_checksum_mismatch_count:
      repositories_checksum_total_count:
      wikis_checksummed_count:
      wikis_checksum_failed_count:
      wikis_checksum_mismatch_count:
      wikis_checksum_total_count:
      repositories_retrying_verification_count:
      wikis_retrying_verification_count:
      projects_count:
      container_repositories_replication_enabled:
      container_repositories_count:
      container_repositories_synced_count:
      container_repositories_failed_count:
      container_repositories_registry_count:
      design_repositories_replication_enabled:
      design_repositories_count:
      design_repositories_synced_count:
      design_repositories_failed_count:
      lfs_objects_count:
      lfs_objects_checksum_total_count:
      lfs_objects_checksummed_count:
      lfs_objects_checksum_failed_count:
      lfs_objects_synced_count:
      lfs_objects_failed_count:
      lfs_objects_registry_count:
      lfs_objects_verification_total_count:
      lfs_objects_verified_count:
      lfs_objects_verification_failed_count:
      merge_request_diffs_count:
      merge_request_diffs_checksum_total_count:
      merge_request_diffs_checksummed_count:
      merge_request_diffs_checksum_failed_count:
      merge_request_diffs_synced_count:
      merge_request_diffs_failed_count:
      merge_request_diffs_registry_count:
      merge_request_diffs_verification_total_count:
      merge_request_diffs_verified_count:
      merge_request_diffs_verification_failed_count:
      package_files_count:
      package_files_checksum_total_count:
      package_files_checksummed_count:
      package_files_checksum_failed_count:
      package_files_synced_count:
      package_files_failed_count:
      package_files_registry_count:
      package_files_verification_total_count:
      package_files_verified_count:
      package_files_verification_failed_count:
      terraform_state_versions_count:
      terraform_state_versions_checksum_total_count:
      terraform_state_versions_checksummed_count:
      terraform_state_versions_checksum_failed_count:
      terraform_state_versions_synced_count:
      terraform_state_versions_failed_count:
      terraform_state_versions_registry_count:
      terraform_state_versions_verification_total_count:
      terraform_state_versions_verified_count:
      terraform_state_versions_verification_failed_count:
      snippet_repositories_count:
      snippet_repositories_checksum_total_count:
      snippet_repositories_checksummed_count:
      snippet_repositories_checksum_failed_count:
      snippet_repositories_synced_count:
      snippet_repositories_failed_count:
      snippet_repositories_registry_count:
      snippet_repositories_verification_total_count:
      snippet_repositories_verified_count:
      snippet_repositories_verification_failed_count:
      group_wiki_repositories_count:
      group_wiki_repositories_checksum_total_count:
      group_wiki_repositories_checksummed_count:
      group_wiki_repositories_checksum_failed_count:
      group_wiki_repositories_synced_count:
      group_wiki_repositories_failed_count:
      group_wiki_repositories_registry_count:
      group_wiki_repositories_verification_total_count:
      group_wiki_repositories_verified_count:
      group_wiki_repositories_verification_failed_count:
      pipeline_artifacts_count:
      pipeline_artifacts_checksum_total_count:
      pipeline_artifacts_checksummed_count:
      pipeline_artifacts_checksum_failed_count:
      pipeline_artifacts_synced_count:
      pipeline_artifacts_failed_count:
      pipeline_artifacts_registry_count:
      pipeline_artifacts_verification_total_count:
      pipeline_artifacts_verified_count:
      pipeline_artifacts_verification_failed_count:
      git_fetch_event_count_weekly:
      git_push_event_count_weekly:
    - repository_verification_enabled: true
      repositories_replication_enabled:
      repositories_synced_count:
      repositories_failed_count:
      attachments_replication_enabled:
      attachments_count:
      attachments_synced_count:
      attachments_failed_count:
      wikis_synced_count:
      wikis_failed_count:
      job_artifacts_replication_enabled:
      job_artifacts_count:
      job_artifacts_synced_count:
      job_artifacts_failed_count:
      repositories_verified_count:
      repositories_verification_failed_count:
      repositories_verification_total_count:
      wikis_verified_count:
      wikis_verification_failed_count:
      wikis_verification_total_count:
      job_artifacts_synced_missing_on_primary_count:
      attachments_synced_missing_on_primary_count:
      repositories_checksummed_count:
      repositories_checksum_failed_count:
      repositories_checksum_mismatch_count:
      repositories_checksum_total_count:
      wikis_checksummed_count:
      wikis_checksum_failed_count:
      wikis_checksum_mismatch_count:
      wikis_checksum_total_count:
      repositories_retrying_verification_count:
      wikis_retrying_verification_count:
      projects_count:
      container_repositories_replication_enabled:
      container_repositories_count:
      container_repositories_synced_count:
      container_repositories_failed_count:
      container_repositories_registry_count:
      design_repositories_replication_enabled:
      design_repositories_count:
      design_repositories_synced_count:
      design_repositories_failed_count:
      lfs_objects_count:
      lfs_objects_checksum_total_count:
      lfs_objects_checksummed_count:
      lfs_objects_checksum_failed_count:
      lfs_objects_synced_count:
      lfs_objects_failed_count:
      lfs_objects_registry_count:
      lfs_objects_verification_total_count:
      lfs_objects_verified_count:
      lfs_objects_verification_failed_count:
      merge_request_diffs_count:
      merge_request_diffs_checksum_total_count:
      merge_request_diffs_checksummed_count:
      merge_request_diffs_checksum_failed_count:
      merge_request_diffs_synced_count:
      merge_request_diffs_failed_count:
      merge_request_diffs_registry_count:
      merge_request_diffs_verification_total_count:
      merge_request_diffs_verified_count:
      merge_request_diffs_verification_failed_count:
      package_files_count:
      package_files_checksum_total_count:
      package_files_checksummed_count:
      package_files_checksum_failed_count:
      package_files_synced_count:
      package_files_failed_count:
      package_files_registry_count:
      package_files_verification_total_count:
      package_files_verified_count:
      package_files_verification_failed_count:
      terraform_state_versions_count:
      terraform_state_versions_checksum_total_count:
      terraform_state_versions_checksummed_count:
      terraform_state_versions_checksum_failed_count:
      terraform_state_versions_synced_count:
      terraform_state_versions_failed_count:
      terraform_state_versions_registry_count:
      terraform_state_versions_verification_total_count:
      terraform_state_versions_verified_count:
      terraform_state_versions_verification_failed_count:
      snippet_repositories_count:
      snippet_repositories_checksum_total_count:
      snippet_repositories_checksummed_count:
      snippet_repositories_checksum_failed_count:
      snippet_repositories_synced_count:
      snippet_repositories_failed_count:
      snippet_repositories_registry_count:
      snippet_repositories_verification_total_count:
      snippet_repositories_verified_count:
      snippet_repositories_verification_failed_count:
      group_wiki_repositories_count:
      group_wiki_repositories_checksum_total_count:
      group_wiki_repositories_checksummed_count:
      group_wiki_repositories_checksum_failed_count:
      group_wiki_repositories_synced_count:
      group_wiki_repositories_failed_count:
      group_wiki_repositories_registry_count:
      group_wiki_repositories_verification_total_count:
      group_wiki_repositories_verified_count:
      group_wiki_repositories_verification_failed_count:
      pipeline_artifacts_count:
      pipeline_artifacts_checksum_total_count:
      pipeline_artifacts_checksummed_count:
      pipeline_artifacts_checksum_failed_count:
      pipeline_artifacts_synced_count:
      pipeline_artifacts_failed_count:
      pipeline_artifacts_registry_count:
      pipeline_artifacts_verification_total_count:
      pipeline_artifacts_verified_count:
      pipeline_artifacts_verification_failed_count:
      git_fetch_event_count_weekly:
      git_push_event_count_weekly:
    - repository_verification_enabled: true
      repositories_replication_enabled:
      repositories_synced_count:
      repositories_failed_count:
      attachments_replication_enabled:
      attachments_count:
      attachments_synced_count:
      attachments_failed_count:
      wikis_synced_count:
      wikis_failed_count:
      job_artifacts_replication_enabled:
      job_artifacts_count:
      job_artifacts_synced_count:
      job_artifacts_failed_count:
      repositories_verified_count:
      repositories_verification_failed_count:
      repositories_verification_total_count:
      wikis_verified_count:
      wikis_verification_failed_count:
      wikis_verification_total_count:
      job_artifacts_synced_missing_on_primary_count:
      attachments_synced_missing_on_primary_count:
      repositories_checksummed_count:
      repositories_checksum_failed_count:
      repositories_checksum_mismatch_count:
      repositories_checksum_total_count:
      wikis_checksummed_count:
      wikis_checksum_failed_count:
      wikis_checksum_mismatch_count:
      wikis_checksum_total_count:
      repositories_retrying_verification_count:
      wikis_retrying_verification_count:
      projects_count:
      container_repositories_replication_enabled:
      container_repositories_count:
      container_repositories_synced_count:
      container_repositories_failed_count:
      container_repositories_registry_count:
      design_repositories_replication_enabled:
      design_repositories_count:
      design_repositories_synced_count:
      design_repositories_failed_count:
      lfs_objects_count:
      lfs_objects_checksum_total_count:
      lfs_objects_checksummed_count:
      lfs_objects_checksum_failed_count:
      lfs_objects_synced_count:
      lfs_objects_failed_count:
      lfs_objects_registry_count:
      lfs_objects_verification_total_count:
      lfs_objects_verified_count:
      lfs_objects_verification_failed_count:
      merge_request_diffs_count:
      merge_request_diffs_checksum_total_count:
      merge_request_diffs_checksummed_count:
      merge_request_diffs_checksum_failed_count:
      merge_request_diffs_synced_count:
      merge_request_diffs_failed_count:
      merge_request_diffs_registry_count:
      merge_request_diffs_verification_total_count:
      merge_request_diffs_verified_count:
      merge_request_diffs_verification_failed_count:
      package_files_count:
      package_files_checksum_total_count:
      package_files_checksummed_count:
      package_files_checksum_failed_count:
      package_files_synced_count:
      package_files_failed_count:
      package_files_registry_count:
      package_files_verification_total_count:
      package_files_verified_count:
      package_files_verification_failed_count:
      terraform_state_versions_count:
      terraform_state_versions_checksum_total_count:
      terraform_state_versions_checksummed_count:
      terraform_state_versions_checksum_failed_count:
      terraform_state_versions_synced_count:
      terraform_state_versions_failed_count:
      terraform_state_versions_registry_count:
      terraform_state_versions_verification_total_count:
      terraform_state_versions_verified_count:
      terraform_state_versions_verification_failed_count:
      snippet_repositories_count:
      snippet_repositories_checksum_total_count:
      snippet_repositories_checksummed_count:
      snippet_repositories_checksum_failed_count:
      snippet_repositories_synced_count:
      snippet_repositories_failed_count:
      snippet_repositories_registry_count:
      snippet_repositories_verification_total_count:
      snippet_repositories_verified_count:
      snippet_repositories_verification_failed_count:
      group_wiki_repositories_count:
      group_wiki_repositories_checksum_total_count:
      group_wiki_repositories_checksummed_count:
      group_wiki_repositories_checksum_failed_count:
      group_wiki_repositories_synced_count:
      group_wiki_repositories_failed_count:
      group_wiki_repositories_registry_count:
      group_wiki_repositories_verification_total_count:
      group_wiki_repositories_verified_count:
      group_wiki_repositories_verification_failed_count:
      pipeline_artifacts_count:
      pipeline_artifacts_checksum_total_count:
      pipeline_artifacts_checksummed_count:
      pipeline_artifacts_checksum_failed_count:
      pipeline_artifacts_synced_count:
      pipeline_artifacts_failed_count:
      pipeline_artifacts_registry_count:
      pipeline_artifacts_verification_total_count:
      pipeline_artifacts_verified_count:
      pipeline_artifacts_verification_failed_count:
      git_fetch_event_count_weekly:
      git_push_event_count_weekly:
  :manage:
    :events: SELECT COUNT(DISTINCT "events"."author_id") FROM "events" WHERE "events"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :groups: SELECT COUNT(DISTINCT "members"."user_id") FROM "members" WHERE "members"."type"
      = 'GroupMember' AND "members"."source_type" = 'Namespace' AND "members"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :users_created: SELECT COUNT("users"."id") FROM "users" WHERE "users"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :omniauth_providers:
    - google_oauth2
    :user_auth_by_provider:
      two-factor: SELECT COUNT(DISTINCT "authentication_events"."user_id") FROM "authentication_events"
        WHERE "authentication_events"."result" = 1 AND "authentication_events"."provider"
        = 'two-factor' AND "authentication_events"."created_at" BETWEEN '2021-05-19
        06:22:33.379771' AND '2021-06-16 06:22:33.379850'
      two-factor-via-u2f-device: SELECT COUNT(DISTINCT "authentication_events"."user_id")
        FROM "authentication_events" WHERE "authentication_events"."result" = 1 AND
        "authentication_events"."provider" = 'two-factor-via-u2f-device' AND "authentication_events"."created_at"
        BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
      two-factor-via-webauthn-device: SELECT COUNT(DISTINCT "authentication_events"."user_id")
        FROM "authentication_events" WHERE "authentication_events"."result" = 1 AND
        "authentication_events"."provider" = 'two-factor-via-webauthn-device' AND
        "authentication_events"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850'
      standard: SELECT COUNT(DISTINCT "authentication_events"."user_id") FROM "authentication_events"
        WHERE "authentication_events"."result" = 1 AND "authentication_events"."provider"
        = 'standard' AND "authentication_events"."created_at" BETWEEN '2021-05-19
        06:22:33.379771' AND '2021-06-16 06:22:33.379850'
      google_oauth2: SELECT COUNT(DISTINCT "authentication_events"."user_id") FROM
        "authentication_events" WHERE "authentication_events"."result" = 1 AND "authentication_events"."provider"
        = 'google_oauth2' AND "authentication_events"."created_at" BETWEEN '2021-05-19
        06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :unique_users_all_imports: SELECT (SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" WHERE "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL) +
      (SELECT COUNT(DISTINCT "bulk_imports"."user_id") FROM "bulk_imports" WHERE "bulk_imports"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850') + (SELECT
      COUNT(DISTINCT "jira_imports"."user_id") FROM "jira_imports" WHERE "jira_imports"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850') + (SELECT
      COUNT(DISTINCT "csv_issue_imports"."user_id") FROM "csv_issue_imports" WHERE
      "csv_issue_imports"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850') + (SELECT COUNT(DISTINCT "group_import_states"."user_id")
      FROM "group_import_states" WHERE "group_import_states"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850')
    :bulk_imports:
      :gitlab: -1000
      :gitlab_v1: SELECT COUNT("bulk_imports"."id") FROM "bulk_imports" WHERE "bulk_imports"."created_at"
        BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND
        "bulk_imports"."source_type" = 0
    :project_imports:
      :gitlab_project: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitlab_project' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :gitlab: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitlab' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :github: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'github' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :bitbucket: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'bitbucket' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :bitbucket_server: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'bitbucket_server' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :gitea: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitea' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :git: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'git' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
        '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :manifest: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'manifest' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :gitlab_migration: SELECT COUNT("bulk_import_entities"."id") FROM "bulk_import_entities"
        WHERE "bulk_import_entities"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "bulk_import_entities"."source_type"
        = 1
      :total: SELECT (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitlab_project' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL)
        + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitlab' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL)
        + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'github' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL)
        + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'bitbucket' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL)
        + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'bitbucket_server' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL)
        + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'gitea' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL)
        + (SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'git' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
        '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL) + (SELECT
        COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type" = 'manifest'
        AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
        06:22:33.379850' AND "projects"."import_type" IS NOT NULL) + (SELECT COUNT("bulk_import_entities"."id")
        FROM "bulk_import_entities" WHERE "bulk_import_entities"."created_at" BETWEEN
        '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "bulk_import_entities"."source_type"
        = 1)
    :issue_imports:
      :jira: SELECT COUNT("jira_imports"."id") FROM "jira_imports" WHERE "jira_imports"."created_at"
        BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
      :fogbugz: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'fogbugz' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :phabricator: SELECT COUNT("projects"."id") FROM "projects" WHERE "projects"."import_type"
        = 'phabricator' AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "projects"."import_type" IS NOT NULL
      :csv: SELECT COUNT("csv_issue_imports"."id") FROM "csv_issue_imports" WHERE
        "csv_issue_imports"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
        '2021-06-16 06:22:33.379850'
    :group_imports:
      :group_import: SELECT COUNT("group_import_states"."group_id") FROM "group_import_states"
        WHERE "group_import_states"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850'
      :gitlab_migration: SELECT COUNT("bulk_import_entities"."id") FROM "bulk_import_entities"
        WHERE "bulk_import_entities"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
        AND '2021-06-16 06:22:33.379850' AND "bulk_import_entities"."source_type"
        = 0
    :projects_imported:
      :total: -1000
      :gitlab_project: -1000
      :gitlab: -1000
      :github: -1000
      :bitbucket: -1000
      :bitbucket_server: -1000
      :gitea: -1000
      :git: -1000
      :manifest: -1000
    :issues_imported:
      :jira: -1000
      :fogbugz: -1000
      :phabricator: -1000
      :csv: -1000
    :groups_imported: -1000
    :ldap_keys: SELECT COUNT(DISTINCT "keys"."user_id") FROM "keys" WHERE "keys"."type"
      = 'LDAPKey' AND "keys"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND
      '2021-06-16 06:22:33.379850'
    :ldap_users: SELECT COUNT(DISTINCT "members"."user_id") FROM "members" WHERE "members"."type"
      = 'GroupMember' AND "members"."source_type" = 'Namespace' AND "members"."ldap"
      = TRUE AND "members"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :value_stream_management_customized_group_stages: SELECT COUNT("analytics_cycle_analytics_group_stages"."id")
      FROM "analytics_cycle_analytics_group_stages" WHERE "analytics_cycle_analytics_group_stages"."custom"
      = TRUE
    :projects_with_compliance_framework: SELECT COUNT("project_compliance_framework_settings"."project_id")
      FROM "project_compliance_framework_settings"
    :custom_compliance_frameworks: SELECT COUNT("compliance_management_frameworks"."id")
      FROM "compliance_management_frameworks"
    :ldap_servers: 0
    :ldap_group_sync_enabled: false
    :ldap_admin_sync_enabled: false
    :group_saml_enabled: false
  :monitor:
    :clusters: SELECT COUNT(DISTINCT "clusters"."user_id") FROM "clusters" WHERE "clusters"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :clusters_applications_prometheus: SELECT COUNT(DISTINCT "clusters_applications_prometheus"."clusters.user_id")
      FROM "clusters_applications_prometheus" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_prometheus"."cluster_id" WHERE "clusters_applications_prometheus"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "clusters_applications_prometheus"."status"
      IN (11, 3, 5)
    :operations_dashboard_default_dashboard: SELECT COUNT("users"."id") FROM "users"
      WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type"
      IN (6, 4)) AND "users"."dashboard" = 8 AND "users"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_with_tracing_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_tracing_settings" ON "project_tracing_settings"."project_id"
      = "projects"."id" WHERE "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :projects_with_error_tracking_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_error_tracking_settings" ON "project_error_tracking_settings"."project_id"
      = "projects"."id" WHERE "project_error_tracking_settings"."enabled" = TRUE AND
      "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :projects_with_incidents: SELECT COUNT(DISTINCT "issues"."project_id") FROM "issues"
      WHERE "issues"."issue_type" = 1 AND "issues"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_with_alert_incidents: SELECT COUNT(DISTINCT "issues"."project_id") FROM
      "issues" INNER JOIN "alert_management_alerts" ON "alert_management_alerts"."issue_id"
      = "issues"."id" WHERE "issues"."issue_type" = 1 AND "issues"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :operations_dashboard_users_with_projects_added: SELECT COUNT(DISTINCT "users_ops_dashboard_projects"."user_id")
      FROM "users_ops_dashboard_projects" INNER JOIN "users" ON "users"."id" = "users_ops_dashboard_projects"."user_id"
      WHERE ("users"."state" IN ('active')) AND ("users"."user_type" IS NULL OR "users"."user_type"
      IN (6, 4)) AND "users_ops_dashboard_projects"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_incident_sla_enabled: SELECT COUNT("projects"."id") FROM "projects"
      INNER JOIN "project_incident_management_settings" ON "project_incident_management_settings"."project_id"
      = "projects"."id" WHERE "project_incident_management_settings"."sla_timer" =
      TRUE
  :package:
    :projects_with_packages: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "packages_packages" ON "packages_packages"."project_id" = "projects"."id"
      WHERE "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
  :plan:
    :issues: SELECT COUNT(DISTINCT "issues"."author_id") FROM "issues" WHERE "issues"."created_at"
      BETWEEN '2021-05-19 06:22:33.425354' AND '2021-06-16 06:22:33.425426'
    :notes: SELECT COUNT(DISTINCT "notes"."author_id") FROM "notes" WHERE "notes"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects" WHERE
      "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :todos: SELECT COUNT(DISTINCT "todos"."author_id") FROM "todos" WHERE "todos"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :service_desk_enabled_projects: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" WHERE "projects"."service_desk_enabled" = TRUE AND "projects"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :service_desk_issues: SELECT COUNT("issues"."id") FROM "issues" WHERE "issues"."author_id"
      = 23 AND "issues"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :projects_jira_active: SELECT COUNT(DISTINCT "projects"."creator_id") FROM "projects"
      INNER JOIN "services" ON "services"."project_id" = "projects"."id" WHERE "services"."type"
      = 'JiraService' AND "services"."active" = TRUE AND "projects"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_jira_dvcs_cloud_active: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      INNER JOIN "project_feature_usages" ON "project_feature_usages"."project_id"
      = "projects"."id" WHERE "services"."type" = 'JiraService' AND "services"."active"
      = TRUE AND "project_feature_usages"."jira_dvcs_cloud_last_sync_at" IS NOT NULL
      AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :projects_jira_dvcs_server_active: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      INNER JOIN "project_feature_usages" ON "project_feature_usages"."project_id"
      = "projects"."id" WHERE "services"."type" = 'JiraService' AND "services"."active"
      = TRUE AND "project_feature_usages"."jira_dvcs_server_last_sync_at" IS NOT NULL
      AND "projects"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :assignee_lists: SELECT COUNT(DISTINCT "lists"."user_id") FROM "lists" WHERE "lists"."list_type"
      = 3 AND "lists"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :epics: SELECT COUNT(DISTINCT "epics"."author_id") FROM "epics" WHERE "epics"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :label_lists: SELECT COUNT(DISTINCT "lists"."user_id") FROM "lists" WHERE "lists"."list_type"
      = 1 AND "lists"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :milestone_lists: SELECT COUNT(DISTINCT "lists"."user_id") FROM "lists" WHERE
      "lists"."list_type" = 4 AND "lists"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
  :release:
    :deployments: SELECT COUNT(DISTINCT "deployments"."user_id") FROM "deployments"
      WHERE "deployments"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :failed_deployments: SELECT COUNT(DISTINCT "deployments"."user_id") FROM "deployments"
      WHERE "deployments"."status" = 3 AND "deployments"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :releases: SELECT COUNT(DISTINCT "releases"."author_id") FROM "releases" WHERE
      "releases"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :successful_deployments: SELECT COUNT(DISTINCT "deployments"."user_id") FROM "deployments"
      WHERE "deployments"."status" = 2 AND "deployments"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :projects_mirrored_with_pipelines_enabled: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "project_features" ON "project_features"."project_id"
      = "projects"."id" WHERE "projects"."mirror" = TRUE AND "projects"."mirror_trigger_builds"
      = TRUE AND "project_features"."builds_access_level" = 20 AND "projects"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
  :secure:
    :user_preferences_group_overview_security_dashboard: SELECT COUNT("users"."id")
      FROM "users" WHERE ("users"."state" IN ('active')) AND ("users"."user_type"
      IS NULL OR "users"."user_type" IN (6, 4)) AND "users"."group_view" = 2 AND "users"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :user_container_scanning_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'container_scanning' AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :user_dast_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds"
      WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'dast' AND "ci_builds"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :user_dependency_scanning_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'dependency_scanning' AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :user_license_management_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'license_management' AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :user_sast_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds"
      WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'sast' AND "ci_builds"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :user_secret_detection_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'secret_detection' AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :user_coverage_fuzzing_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'coverage_fuzzing' AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :user_api_fuzzing_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds"
      WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" = 'apifuzzer_fuzz'
      AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :user_api_fuzzing_dnd_jobs: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM
      "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name" =
      'apifuzzer_fuzz_dnd' AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :sast_pipeline: 0
    :dependency_scanning_pipeline: 0
    :container_scanning_pipeline: 0
    :dast_pipeline: 0
    :secret_detection_pipeline: 0
    :coverage_fuzzing_pipeline: 0
    :api_fuzzing_pipeline: 0
    :sast_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans" INNER
      JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND "ci_builds"."type"
      = 'Ci::Build' WHERE "security_scans"."scan_type" = 1 AND ("ci_builds"."retried"
      = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status" IN ('success'))
      AND "security_scans"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :dependency_scanning_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 2 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success')) AND "security_scans"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :container_scanning_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 3 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success')) AND "security_scans"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :dast_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans" INNER
      JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND "ci_builds"."type"
      = 'Ci::Build' WHERE "security_scans"."scan_type" = 4 AND ("ci_builds"."retried"
      = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status" IN ('success'))
      AND "security_scans"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :secret_detection_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 5 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success')) AND "security_scans"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :coverage_fuzzing_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 6 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success')) AND "security_scans"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :api_fuzzing_scans: SELECT COUNT("security_scans"."build_id") FROM "security_scans"
      INNER JOIN "ci_builds" ON "ci_builds"."id" = "security_scans"."build_id" AND
      "ci_builds"."type" = 'Ci::Build' WHERE "security_scans"."scan_type" = 7 AND
      ("ci_builds"."retried" = FALSE OR "ci_builds"."retried" IS NULL) AND ("ci_builds"."status"
      IN ('success')) AND "security_scans"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
    :user_unique_users_all_secure_scanners: SELECT COUNT(DISTINCT "ci_builds"."user_id")
      FROM "ci_builds" WHERE "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."name"
      IN ('container_scanning', 'dast', 'dependency_scanning', 'license_management',
      'license_scanning', 'sast', 'secret_detection', 'coverage_fuzzing', 'apifuzzer_fuzz',
      'apifuzzer_fuzz_dnd') AND "ci_builds"."created_at" BETWEEN '2021-05-19 06:22:33.379771'
      AND '2021-06-16 06:22:33.379850'
  :verify:
    :ci_builds: SELECT COUNT(DISTINCT "ci_builds"."user_id") FROM "ci_builds" WHERE
      "ci_builds"."type" = 'Ci::Build' AND "ci_builds"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :ci_external_pipelines: SELECT COUNT(DISTINCT "ci_pipelines"."user_id") FROM "ci_pipelines"
      WHERE "ci_pipelines"."source" = 6 AND "ci_pipelines"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :ci_internal_pipelines: SELECT COUNT(DISTINCT "ci_pipelines"."user_id") FROM "ci_pipelines"
      WHERE ("ci_pipelines"."source" IN (1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13) OR
      "ci_pipelines"."source" IS NULL) AND "ci_pipelines"."created_at" BETWEEN '2021-05-19
      06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :ci_pipeline_config_auto_devops: SELECT COUNT(DISTINCT "ci_pipelines"."user_id")
      FROM "ci_pipelines" WHERE "ci_pipelines"."config_source" = 2 AND "ci_pipelines"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :ci_pipeline_config_repository: SELECT COUNT(DISTINCT "ci_pipelines"."user_id")
      FROM "ci_pipelines" WHERE "ci_pipelines"."config_source" = 1 AND "ci_pipelines"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :ci_pipeline_schedules: SELECT COUNT(DISTINCT "ci_pipeline_schedules"."owner_id")
      FROM "ci_pipeline_schedules" WHERE "ci_pipeline_schedules"."created_at" BETWEEN
      '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
    :ci_pipelines: SELECT COUNT(DISTINCT "ci_pipelines"."user_id") FROM "ci_pipelines"
      WHERE "ci_pipelines"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :ci_triggers: SELECT COUNT(DISTINCT "ci_triggers"."owner_id") FROM "ci_triggers"
      WHERE "ci_triggers"."created_at" BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16
      06:22:33.379850'
    :clusters_applications_runner: SELECT COUNT(DISTINCT "clusters_applications_runners"."clusters.user_id")
      FROM "clusters_applications_runners" INNER JOIN "clusters" ON "clusters"."id"
      = "clusters_applications_runners"."cluster_id" WHERE "clusters_applications_runners"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850' AND "clusters_applications_runners"."status"
      IN (11, 3, 5)
    :projects_reporting_ci_cd_back_to_github: SELECT COUNT(DISTINCT "projects"."creator_id")
      FROM "projects" INNER JOIN "services" ON "services"."project_id" = "projects"."id"
      AND "services"."type" = 'GithubService' WHERE "services"."type" = 'GithubService'
      AND "services"."pipeline_events" = TRUE AND "services"."active" = TRUE AND "projects"."created_at"
      BETWEEN '2021-05-19 06:22:33.379771' AND '2021-06-16 06:22:33.379850'
:analytics_unique_visits:
  users_viewing_analytics_group_devops_adoption:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831fbc0 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  i_analytics_dev_ops_adoption:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831f5a8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  i_analytics_dev_ops_score:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831f1e8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  p_analytics_merge_request:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831ed38 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  i_analytics_instance_statistics:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831e748 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  g_analytics_contribution:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831e4f0 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  g_analytics_insights:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831e270 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  g_analytics_issues:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831e090 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  g_analytics_productivity:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831de10 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  g_analytics_valuestream:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831db40 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  p_analytics_pipelines:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831d960 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  p_analytics_code_reviews:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831d640 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  p_analytics_valuestream:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831d320 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  p_analytics_insights:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831cf10 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  p_analytics_issues:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831ccb8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  p_analytics_repo:
    :redis_usage_data_block: "#<Proc:0x00007fc3d831c510 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  i_analytics_cohorts:
    :redis_usage_data_block: "#<Proc:0x00007fc3d9477f80 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:715>"
  analytics_unique_visits_for_any_target:
    :redis_usage_data_block: "#<Proc:0x00007fc3d9477eb8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:717>"
  analytics_unique_visits_for_any_target_monthly:
    :redis_usage_data_block: "#<Proc:0x00007fc3d9477e18 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:718>"
:compliance_unique_visits:
  g_compliance_dashboard:
    :redis_usage_data_block: "#<Proc:0x00007fc3d9474ad8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:725>"
  g_compliance_audit_events:
    :redis_usage_data_block: "#<Proc:0x00007fc3d94749e8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:725>"
  i_compliance_audit_events:
    :redis_usage_data_block: "#<Proc:0x00007fc3d94748f8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:725>"
  i_compliance_credential_inventory:
    :redis_usage_data_block: "#<Proc:0x00007fc3d9474808 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:725>"
  a_compliance_audit_events_api:
    :redis_usage_data_block: "#<Proc:0x00007fc3d9474718 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:725>"
  compliance_unique_visits_for_any_target:
    :redis_usage_data_block: "#<Proc:0x00007fc3d9474678 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:727>"
  compliance_unique_visits_for_any_target_monthly:
    :redis_usage_data_block: "#<Proc:0x00007fc3d94745d8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:728>"
:search_unique_visits:
  i_search_total:
    :redis_usage_data_block: "#<Proc:0x00007fc3d947e290 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:736>"
  i_search_advanced:
    :redis_usage_data_block: "#<Proc:0x00007fc3d947e1a0 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:736>"
  i_search_paid:
    :redis_usage_data_block: "#<Proc:0x00007fc3d947e0b0 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:736>"
  search_unique_visits_for_any_target_weekly:
    :redis_usage_data_block: "#<Proc:0x00007fc3d947dfe8 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:739>"
  search_unique_visits_for_any_target_monthly:
    :redis_usage_data_block: "#<Proc:0x00007fc3d947df48 /Users/alina/Documents/work/gitlab-development-kit/gitlab/lib/gitlab/usage_data.rb:740>"
:redis_hll_counters:
  compliance:
    g_compliance_dashboard_weekly: 0
    g_compliance_dashboard_monthly: 0
    g_compliance_audit_events_weekly: 0
    g_compliance_audit_events_monthly: 0
    i_compliance_audit_events_weekly: 0
    i_compliance_audit_events_monthly: 0
    i_compliance_credential_inventory_weekly: 0
    i_compliance_credential_inventory_monthly: 0
    a_compliance_audit_events_api_weekly: 0
    a_compliance_audit_events_api_monthly: 0
    compliance_total_unique_counts_weekly: 0
    compliance_total_unique_counts_monthly: 0
  ide_edit:
    g_edit_by_web_ide_weekly: 0
    g_edit_by_web_ide_monthly: 0
    g_edit_by_sfe_weekly: 0
    g_edit_by_sfe_monthly: 0
    g_edit_by_sse_weekly: 0
    g_edit_by_sse_monthly: 0
    g_edit_by_snippet_ide_weekly: 0
    g_edit_by_snippet_ide_monthly: 0
    ide_edit_total_unique_counts_weekly: 0
    ide_edit_total_unique_counts_monthly: 0
  search:
    i_search_total_weekly: 0
    i_search_total_monthly: 0
    i_search_advanced_weekly: 0
    i_search_advanced_monthly: 0
    i_search_paid_weekly: 0
    i_search_paid_monthly: 0
    search_total_unique_counts_weekly: 0
    search_total_unique_counts_monthly: 0
  source_code:
    wiki_action_weekly: 0
    wiki_action_monthly: 0
    design_action_weekly: 0
    design_action_monthly: 0
    project_action_weekly: 0
    project_action_monthly: 0
    git_write_action_weekly: 0
    git_write_action_monthly: 0
    merge_request_action_weekly: 0
    merge_request_action_monthly: 0
    i_source_code_code_intelligence_weekly: 0
    i_source_code_code_intelligence_monthly: 0
  incident_management:
    incident_management_alert_status_changed_weekly: 0
    incident_management_alert_status_changed_monthly: 0
    incident_management_alert_assigned_weekly: 0
    incident_management_alert_assigned_monthly: 0
    incident_management_alert_todo_weekly: 0
    incident_management_alert_todo_monthly: 0
    incident_management_incident_created_weekly: 0
    incident_management_incident_created_monthly: 0
    incident_management_incident_reopened_weekly: 0
    incident_management_incident_reopened_monthly: 0
    incident_management_incident_closed_weekly: 0
    incident_management_incident_closed_monthly: 0
    incident_management_incident_assigned_weekly: 0
    incident_management_incident_assigned_monthly: 0
    incident_management_incident_todo_weekly: 0
    incident_management_incident_todo_monthly: 0
    incident_management_incident_comment_weekly: 0
    incident_management_incident_comment_monthly: 0
    incident_management_incident_zoom_meeting_weekly: 0
    incident_management_incident_zoom_meeting_monthly: 0
    incident_management_incident_published_weekly: 0
    incident_management_incident_published_monthly: 0
    incident_management_incident_relate_weekly: 0
    incident_management_incident_relate_monthly: 0
    incident_management_incident_unrelate_weekly: 0
    incident_management_incident_unrelate_monthly: 0
    incident_management_incident_change_confidential_weekly: 0
    incident_management_incident_change_confidential_monthly: 0
    incident_management_total_unique_counts_weekly: 0
    incident_management_total_unique_counts_monthly: 0
  incident_management_alerts:
    incident_management_alert_create_incident_weekly: 0
    incident_management_alert_create_incident_monthly: 0
  incident_management_oncall:
    i_incident_management_oncall_notification_sent_weekly: 0
    i_incident_management_oncall_notification_sent_monthly: 0
  testing:
    i_testing_test_case_parsed_weekly: 0
    i_testing_test_case_parsed_monthly: 0
    i_testing_metrics_report_widget_total_weekly: 0
    i_testing_metrics_report_widget_total_monthly: 0
    i_testing_group_code_coverage_visit_total_weekly: 0
    i_testing_group_code_coverage_visit_total_monthly: 0
    i_testing_full_code_quality_report_total_weekly: 0
    i_testing_full_code_quality_report_total_monthly: 0
    i_testing_web_performance_widget_total_weekly: 0
    i_testing_web_performance_widget_total_monthly: 0
    i_testing_group_code_coverage_project_click_total_weekly: 0
    i_testing_group_code_coverage_project_click_total_monthly: 0
    i_testing_load_performance_widget_total_weekly: 0
    i_testing_load_performance_widget_total_monthly: 0
    i_testing_metrics_report_artifact_uploaders_weekly: 0
    i_testing_metrics_report_artifact_uploaders_monthly: 0
    i_testing_summary_widget_total_weekly: 0
    i_testing_summary_widget_total_monthly: 0
    users_expanding_testing_code_quality_report_weekly: 0
    users_expanding_testing_code_quality_report_monthly: 0
    users_expanding_testing_accessibility_report_weekly: 0
    users_expanding_testing_accessibility_report_monthly: 0
    testing_total_unique_counts_weekly: 0
    testing_total_unique_counts_monthly: 0
  issues_edit:
    g_project_management_issue_title_changed_weekly: 0
    g_project_management_issue_title_changed_monthly: 0
    g_project_management_issue_description_changed_weekly: 0
    g_project_management_issue_description_changed_monthly: 0
    g_project_management_issue_assignee_changed_weekly: 0
    g_project_management_issue_assignee_changed_monthly: 0
    g_project_management_issue_made_confidential_weekly: 0
    g_project_management_issue_made_confidential_monthly: 0
    g_project_management_issue_made_visible_weekly: 0
    g_project_management_issue_made_visible_monthly: 0
    g_project_management_issue_created_weekly: 1
    g_project_management_issue_created_monthly: 1
    g_project_management_issue_closed_weekly: 0
    g_project_management_issue_closed_monthly: 0
    g_project_management_issue_reopened_weekly: 0
    g_project_management_issue_reopened_monthly: 0
    g_project_management_issue_label_changed_weekly: 0
    g_project_management_issue_label_changed_monthly: 0
    g_project_management_issue_milestone_changed_weekly: 0
    g_project_management_issue_milestone_changed_monthly: 0
    g_project_management_issue_iteration_changed_weekly: 0
    g_project_management_issue_iteration_changed_monthly: 0
    g_project_management_issue_weight_changed_weekly: 0
    g_project_management_issue_weight_changed_monthly: 0
    g_project_management_issue_cross_referenced_weekly: 0
    g_project_management_issue_cross_referenced_monthly: 0
    g_project_management_issue_moved_weekly: 0
    g_project_management_issue_moved_monthly: 0
    g_project_management_issue_related_weekly: 0
    g_project_management_issue_related_monthly: 0
    g_project_management_issue_unrelated_weekly: 0
    g_project_management_issue_unrelated_monthly: 0
    g_project_management_issue_marked_as_duplicate_weekly: 0
    g_project_management_issue_marked_as_duplicate_monthly: 0
    g_project_management_issue_locked_weekly: 0
    g_project_management_issue_locked_monthly: 0
    g_project_management_issue_unlocked_weekly: 0
    g_project_management_issue_unlocked_monthly: 0
    g_project_management_issue_added_to_epic_weekly: 0
    g_project_management_issue_added_to_epic_monthly: 0
    g_project_management_issue_removed_from_epic_weekly: 0
    g_project_management_issue_removed_from_epic_monthly: 0
    g_project_management_issue_changed_epic_weekly: 0
    g_project_management_issue_changed_epic_monthly: 0
    g_project_management_issue_designs_added_weekly: 0
    g_project_management_issue_designs_added_monthly: 0
    g_project_management_issue_designs_modified_weekly: 0
    g_project_management_issue_designs_modified_monthly: 0
    g_project_management_issue_designs_removed_weekly: 0
    g_project_management_issue_designs_removed_monthly: 0
    g_project_management_issue_due_date_changed_weekly: 0
    g_project_management_issue_due_date_changed_monthly: 0
    g_project_management_issue_time_estimate_changed_weekly: 0
    g_project_management_issue_time_estimate_changed_monthly: 0
    g_project_management_issue_time_spent_changed_weekly: 0
    g_project_management_issue_time_spent_changed_monthly: 0
    g_project_management_issue_comment_added_weekly: 0
    g_project_management_issue_comment_added_monthly: 0
    g_project_management_issue_comment_edited_weekly: 0
    g_project_management_issue_comment_edited_monthly: 0
    g_project_management_issue_comment_removed_weekly: 0
    g_project_management_issue_comment_removed_monthly: 0
    g_project_management_issue_health_status_changed_weekly: 0
    g_project_management_issue_health_status_changed_monthly: 0
    g_project_management_issue_cloned_weekly: 0
    g_project_management_issue_cloned_monthly: 0
    issues_edit_total_unique_counts_weekly: 1
    issues_edit_total_unique_counts_monthly: 1
  ci_secrets_management:
    i_ci_secrets_management_vault_build_created_weekly: 0
    i_ci_secrets_management_vault_build_created_monthly: 0
  snippets:
    i_snippets_show_weekly: 0
    i_snippets_show_monthly: 0
  terraform:
    p_terraform_state_api_unique_users_weekly: 0
    p_terraform_state_api_unique_users_monthly: 0
  pipeline_authoring:
    o_pipeline_authoring_unique_users_committing_ciconfigfile_weekly: 0
    o_pipeline_authoring_unique_users_committing_ciconfigfile_monthly: 0
    o_pipeline_authoring_unique_users_pushing_mr_ciconfigfile_weekly: 0
    o_pipeline_authoring_unique_users_pushing_mr_ciconfigfile_monthly: 0
    pipeline_authoring_total_unique_counts_weekly: 0
    pipeline_authoring_total_unique_counts_monthly: 0
  secure:
    users_expanding_secure_security_report_weekly: 0
    users_expanding_secure_security_report_monthly: 0
  epic_boards_usage:
    g_project_management_users_creating_epic_boards_weekly: 0
    g_project_management_users_creating_epic_boards_monthly: 0
    g_project_management_users_viewing_epic_boards_weekly: 0
    g_project_management_users_viewing_epic_boards_monthly: 0
    g_project_management_users_updating_epic_board_names_weekly: 0
    g_project_management_users_updating_epic_board_names_monthly: 0
    epic_boards_usage_total_unique_counts_weekly: 0
    epic_boards_usage_total_unique_counts_monthly: 0
  epics_usage:
    g_project_management_epic_created_weekly: 0
    g_project_management_epic_created_monthly: 0
    project_management_users_unchecking_epic_task_weekly: 0
    project_management_users_unchecking_epic_task_monthly: 0
    project_management_users_checking_epic_task_weekly: 0
    project_management_users_checking_epic_task_monthly: 0
    g_project_management_users_updating_epic_titles_weekly: 0
    g_project_management_users_updating_epic_titles_monthly: 0
    g_project_management_users_updating_epic_descriptions_weekly: 0
    g_project_management_users_updating_epic_descriptions_monthly: 0
    g_project_management_users_creating_epic_notes_weekly: 0
    g_project_management_users_creating_epic_notes_monthly: 0
    g_project_management_users_updating_epic_notes_weekly: 0
    g_project_management_users_updating_epic_notes_monthly: 0
    g_project_management_users_destroying_epic_notes_weekly: 0
    g_project_management_users_destroying_epic_notes_monthly: 0
    g_project_management_users_awarding_epic_emoji_weekly: 0
    g_project_management_users_awarding_epic_emoji_monthly: 0
    g_project_management_users_removing_epic_emoji_weekly: 0
    g_project_management_users_removing_epic_emoji_monthly: 0
    g_project_management_users_setting_epic_start_date_as_fixed_weekly: 0
    g_project_management_users_setting_epic_start_date_as_fixed_monthly: 0
    g_project_management_users_updating_fixed_epic_start_date_weekly: 0
    g_project_management_users_updating_fixed_epic_start_date_monthly: 0
    g_project_management_users_setting_epic_start_date_as_inherited_weekly: 0
    g_project_management_users_setting_epic_start_date_as_inherited_monthly: 0
    g_project_management_users_setting_epic_due_date_as_fixed_weekly: 0
    g_project_management_users_setting_epic_due_date_as_fixed_monthly: 0
    g_project_management_users_updating_fixed_epic_due_date_weekly: 0
    g_project_management_users_updating_fixed_epic_due_date_monthly: 0
    g_project_management_users_setting_epic_due_date_as_inherited_weekly: 0
    g_project_management_users_setting_epic_due_date_as_inherited_monthly: 0
    g_project_management_epic_issue_added_weekly: 0
    g_project_management_epic_issue_added_monthly: 0
    g_project_management_epic_issue_removed_weekly: 0
    g_project_management_epic_issue_removed_monthly: 0
    g_project_management_epic_issue_moved_from_project_weekly: 0
    g_project_management_epic_issue_moved_from_project_monthly: 0
    g_project_management_users_updating_epic_parent_weekly: 0
    g_project_management_users_updating_epic_parent_monthly: 0
    g_project_management_epic_closed_weekly: 0
    g_project_management_epic_closed_monthly: 0
    g_project_management_epic_reopened_weekly: 0
    g_project_management_epic_reopened_monthly: 0
    g_project_management_issue_promoted_to_epic_weekly: 0
    g_project_management_issue_promoted_to_epic_monthly: 0
    g_project_management_users_setting_epic_confidential_weekly: 0
    g_project_management_users_setting_epic_confidential_monthly: 0
    g_project_management_users_setting_epic_visible_weekly: 0
    g_project_management_users_setting_epic_visible_monthly: 0
    g_project_management_epic_users_changing_labels_weekly: 0
    g_project_management_epic_users_changing_labels_monthly: 0
    g_project_management_epic_destroyed_weekly: 0
    g_project_management_epic_destroyed_monthly: 0
    g_project_management_epic_cross_referenced_weekly: 0
    g_project_management_epic_cross_referenced_monthly: 0
    g_project_management_users_epic_issue_added_from_epic_weekly: 0
    g_project_management_users_epic_issue_added_from_epic_monthly: 0
    epics_usage_total_unique_counts_weekly: 0
    epics_usage_total_unique_counts_monthly: 0
  code_review:
    i_code_review_mr_diffs_weekly: 0
    i_code_review_mr_diffs_monthly: 0
    i_code_review_user_single_file_diffs_weekly: 0
    i_code_review_user_single_file_diffs_monthly: 0
    i_code_review_mr_single_file_diffs_weekly: 0
    i_code_review_mr_single_file_diffs_monthly: 0
    i_code_review_user_toggled_task_item_status_weekly: 0
    i_code_review_user_toggled_task_item_status_monthly: 0
    i_code_review_user_create_mr_weekly: 0
    i_code_review_user_create_mr_monthly: 0
    i_code_review_user_close_mr_weekly: 0
    i_code_review_user_close_mr_monthly: 0
    i_code_review_user_reopen_mr_weekly: 0
    i_code_review_user_reopen_mr_monthly: 0
    i_code_review_user_approve_mr_weekly: 0
    i_code_review_user_approve_mr_monthly: 0
    i_code_review_user_unapprove_mr_weekly: 0
    i_code_review_user_unapprove_mr_monthly: 0
    i_code_review_user_resolve_thread_weekly: 0
    i_code_review_user_resolve_thread_monthly: 0
    i_code_review_user_unresolve_thread_weekly: 0
    i_code_review_user_unresolve_thread_monthly: 0
    i_code_review_edit_mr_title_weekly: 0
    i_code_review_edit_mr_title_monthly: 0
    i_code_review_edit_mr_desc_weekly: 0
    i_code_review_edit_mr_desc_monthly: 0
    i_code_review_user_merge_mr_weekly: 0
    i_code_review_user_merge_mr_monthly: 0
    i_code_review_user_create_mr_comment_weekly: 0
    i_code_review_user_create_mr_comment_monthly: 0
    i_code_review_user_edit_mr_comment_weekly: 0
    i_code_review_user_edit_mr_comment_monthly: 0
    i_code_review_user_remove_mr_comment_weekly: 0
    i_code_review_user_remove_mr_comment_monthly: 0
    i_code_review_user_create_review_note_weekly: 0
    i_code_review_user_create_review_note_monthly: 0
    i_code_review_user_publish_review_weekly: 0
    i_code_review_user_publish_review_monthly: 0
    i_code_review_user_create_multiline_mr_comment_weekly: 0
    i_code_review_user_create_multiline_mr_comment_monthly: 0
    i_code_review_user_edit_multiline_mr_comment_weekly: 0
    i_code_review_user_edit_multiline_mr_comment_monthly: 0
    i_code_review_user_remove_multiline_mr_comment_weekly: 0
    i_code_review_user_remove_multiline_mr_comment_monthly: 0
    i_code_review_user_add_suggestion_weekly: 0
    i_code_review_user_add_suggestion_monthly: 0
    i_code_review_user_apply_suggestion_weekly: 0
    i_code_review_user_apply_suggestion_monthly: 0
    i_code_review_user_assigned_weekly: 0
    i_code_review_user_assigned_monthly: 0
    i_code_review_user_marked_as_draft_weekly: 0
    i_code_review_user_marked_as_draft_monthly: 0
    i_code_review_user_unmarked_as_draft_weekly: 0
    i_code_review_user_unmarked_as_draft_monthly: 0
    i_code_review_user_review_requested_weekly: 0
    i_code_review_user_review_requested_monthly: 0
    i_code_review_user_approval_rule_added_weekly: 0
    i_code_review_user_approval_rule_added_monthly: 0
    i_code_review_user_approval_rule_deleted_weekly: 0
    i_code_review_user_approval_rule_deleted_monthly: 0
    i_code_review_user_approval_rule_edited_weekly: 0
    i_code_review_user_approval_rule_edited_monthly: 0
    i_code_review_user_vs_code_api_request_weekly: 0
    i_code_review_user_vs_code_api_request_monthly: 0
    i_code_review_user_create_mr_from_issue_weekly: 0
    i_code_review_user_create_mr_from_issue_monthly: 0
    i_code_review_user_mr_discussion_locked_weekly: 0
    i_code_review_user_mr_discussion_locked_monthly: 0
    i_code_review_user_mr_discussion_unlocked_weekly: 0
    i_code_review_user_mr_discussion_unlocked_monthly: 0
    i_code_review_user_time_estimate_changed_weekly: 0
    i_code_review_user_time_estimate_changed_monthly: 0
    i_code_review_user_time_spent_changed_weekly: 0
    i_code_review_user_time_spent_changed_monthly: 0
    i_code_review_user_assignees_changed_weekly: 0
    i_code_review_user_assignees_changed_monthly: 0
    i_code_review_user_reviewers_changed_weekly: 0
    i_code_review_user_reviewers_changed_monthly: 0
    i_code_review_user_milestone_changed_weekly: 0
    i_code_review_user_milestone_changed_monthly: 0
    i_code_review_user_labels_changed_weekly: 0
    i_code_review_user_labels_changed_monthly: 0
    i_code_review_click_diff_view_setting_weekly: 0
    i_code_review_click_diff_view_setting_monthly: 0
    i_code_review_click_single_file_mode_setting_weekly: 0
    i_code_review_click_single_file_mode_setting_monthly: 0
    i_code_review_click_file_browser_setting_weekly: 0
    i_code_review_click_file_browser_setting_monthly: 0
    i_code_review_click_whitespace_setting_weekly: 0
    i_code_review_click_whitespace_setting_monthly: 0
    i_code_review_diff_view_inline_weekly: 0
    i_code_review_diff_view_inline_monthly: 0
    i_code_review_diff_view_parallel_weekly: 0
    i_code_review_diff_view_parallel_monthly: 0
    i_code_review_file_browser_tree_view_weekly: 0
    i_code_review_file_browser_tree_view_monthly: 0
    i_code_review_file_browser_list_view_weekly: 0
    i_code_review_file_browser_list_view_monthly: 0
    i_code_review_diff_show_whitespace_weekly: 0
    i_code_review_diff_show_whitespace_monthly: 0
    i_code_review_diff_hide_whitespace_weekly: 0
    i_code_review_diff_hide_whitespace_monthly: 0
    i_code_review_diff_single_file_weekly: 0
    i_code_review_diff_single_file_monthly: 0
    i_code_review_diff_multiple_files_weekly: 0
    i_code_review_diff_multiple_files_monthly: 0
    i_code_review_user_load_conflict_ui_weekly: 0
    i_code_review_user_load_conflict_ui_monthly: 0
    i_code_review_user_resolve_conflict_weekly: 0
    i_code_review_user_resolve_conflict_monthly: 0
    code_review_total_unique_counts_weekly: 0
    code_review_total_unique_counts_monthly: 0
  ci_templates:
    p_ci_templates_implicit_auto_devops_weekly: 0
    p_ci_templates_implicit_auto_devops_monthly: 0
    p_ci_templates_implicit_auto_devops_build_weekly: 0
    p_ci_templates_implicit_auto_devops_build_monthly: 0
    p_ci_templates_implicit_auto_devops_deploy_weekly: 0
    p_ci_templates_implicit_auto_devops_deploy_monthly: 0
    p_ci_templates_implicit_security_sast_weekly: 0
    p_ci_templates_implicit_security_sast_monthly: 0
    p_ci_templates_implicit_security_secret_detection_weekly: 0
    p_ci_templates_implicit_security_secret_detection_monthly: 0
    p_ci_templates_5_min_production_app_weekly: 0
    p_ci_templates_5_min_production_app_monthly: 0
    p_ci_templates_auto_devops_weekly: 0
    p_ci_templates_auto_devops_monthly: 0
    p_ci_templates_aws_cf_deploy_ec2_weekly: 0
    p_ci_templates_aws_cf_deploy_ec2_monthly: 0
    p_ci_templates_aws_deploy_ecs_weekly: 0
    p_ci_templates_aws_deploy_ecs_monthly: 0
    p_ci_templates_auto_devops_build_weekly: 0
    p_ci_templates_auto_devops_build_monthly: 0
    p_ci_templates_auto_devops_deploy_weekly: 0
    p_ci_templates_auto_devops_deploy_monthly: 0
    p_ci_templates_auto_devops_deploy_latest_weekly: 0
    p_ci_templates_auto_devops_deploy_latest_monthly: 0
    p_ci_templates_security_sast_weekly: 0
    p_ci_templates_security_sast_monthly: 0
    p_ci_templates_security_secret_detection_weekly: 0
    p_ci_templates_security_secret_detection_monthly: 0
    p_ci_templates_terraform_base_latest_weekly: 0
    p_ci_templates_terraform_base_latest_monthly: 0
    ci_templates_total_unique_counts_weekly: 0
    ci_templates_total_unique_counts_monthly: 0
  quickactions:
    i_quickactions_approve_weekly: 0
    i_quickactions_approve_monthly: 0
    i_quickactions_assign_single_weekly: 0
    i_quickactions_assign_single_monthly: 0
    i_quickactions_assign_multiple_weekly: 0
    i_quickactions_assign_multiple_monthly: 0
    i_quickactions_assign_self_weekly: 0
    i_quickactions_assign_self_monthly: 0
    i_quickactions_assign_reviewer_weekly: 0
    i_quickactions_assign_reviewer_monthly: 0
    i_quickactions_award_weekly: 0
    i_quickactions_award_monthly: 0
    i_quickactions_board_move_weekly: 0
    i_quickactions_board_move_monthly: 0
    i_quickactions_child_epic_weekly: 0
    i_quickactions_child_epic_monthly: 0
    i_quickactions_clear_weight_weekly: 0
    i_quickactions_clear_weight_monthly: 0
    i_quickactions_clone_weekly: 0
    i_quickactions_clone_monthly: 0
    i_quickactions_close_weekly: 0
    i_quickactions_close_monthly: 0
    i_quickactions_confidential_weekly: 0
    i_quickactions_confidential_monthly: 0
    i_quickactions_copy_metadata_merge_request_weekly: 0
    i_quickactions_copy_metadata_merge_request_monthly: 0
    i_quickactions_copy_metadata_issue_weekly: 0
    i_quickactions_copy_metadata_issue_monthly: 0
    i_quickactions_create_merge_request_weekly: 0
    i_quickactions_create_merge_request_monthly: 0
    i_quickactions_done_weekly: 0
    i_quickactions_done_monthly: 0
    i_quickactions_draft_weekly: 0
    i_quickactions_draft_monthly: 0
    i_quickactions_due_weekly: 0
    i_quickactions_due_monthly: 0
    i_quickactions_duplicate_weekly: 0
    i_quickactions_duplicate_monthly: 0
    i_quickactions_epic_weekly: 0
    i_quickactions_epic_monthly: 0
    i_quickactions_estimate_weekly: 0
    i_quickactions_estimate_monthly: 0
    i_quickactions_iteration_weekly: 0
    i_quickactions_iteration_monthly: 0
    i_quickactions_label_weekly: 0
    i_quickactions_label_monthly: 0
    i_quickactions_lock_weekly: 0
    i_quickactions_lock_monthly: 0
    i_quickactions_merge_weekly: 0
    i_quickactions_merge_monthly: 0
    i_quickactions_milestone_weekly: 0
    i_quickactions_milestone_monthly: 0
    i_quickactions_move_weekly: 0
    i_quickactions_move_monthly: 0
    i_quickactions_parent_epic_weekly: 0
    i_quickactions_parent_epic_monthly: 0
    i_quickactions_promote_weekly: 0
    i_quickactions_promote_monthly: 0
    i_quickactions_publish_weekly: 0
    i_quickactions_publish_monthly: 0
    i_quickactions_reassign_weekly: 0
    i_quickactions_reassign_monthly: 0
    i_quickactions_reassign_reviewer_weekly: 0
    i_quickactions_reassign_reviewer_monthly: 0
    i_quickactions_rebase_weekly: 0
    i_quickactions_rebase_monthly: 0
    i_quickactions_relabel_weekly: 0
    i_quickactions_relabel_monthly: 0
    i_quickactions_relate_weekly: 0
    i_quickactions_relate_monthly: 0
    i_quickactions_remove_child_epic_weekly: 0
    i_quickactions_remove_child_epic_monthly: 0
    i_quickactions_remove_due_date_weekly: 0
    i_quickactions_remove_due_date_monthly: 0
    i_quickactions_remove_epic_weekly: 0
    i_quickactions_remove_epic_monthly: 0
    i_quickactions_remove_estimate_weekly: 0
    i_quickactions_remove_estimate_monthly: 0
    i_quickactions_remove_iteration_weekly: 0
    i_quickactions_remove_iteration_monthly: 0
    i_quickactions_remove_milestone_weekly: 0
    i_quickactions_remove_milestone_monthly: 0
    i_quickactions_remove_parent_epic_weekly: 0
    i_quickactions_remove_parent_epic_monthly: 0
    i_quickactions_remove_time_spent_weekly: 0
    i_quickactions_remove_time_spent_monthly: 0
    i_quickactions_remove_zoom_weekly: 0
    i_quickactions_remove_zoom_monthly: 0
    i_quickactions_reopen_weekly: 0
    i_quickactions_reopen_monthly: 0
    i_quickactions_shrug_weekly: 0
    i_quickactions_shrug_monthly: 0
    i_quickactions_spend_subtract_weekly: 0
    i_quickactions_spend_subtract_monthly: 0
    i_quickactions_spend_add_weekly: 0
    i_quickactions_spend_add_monthly: 0
    i_quickactions_submit_review_weekly: 0
    i_quickactions_submit_review_monthly: 0
    i_quickactions_subscribe_weekly: 0
    i_quickactions_subscribe_monthly: 0
    i_quickactions_tableflip_weekly: 0
    i_quickactions_tableflip_monthly: 0
    i_quickactions_tag_weekly: 0
    i_quickactions_tag_monthly: 0
    i_quickactions_target_branch_weekly: 0
    i_quickactions_target_branch_monthly: 0
    i_quickactions_title_weekly: 0
    i_quickactions_title_monthly: 0
    i_quickactions_todo_weekly: 0
    i_quickactions_todo_monthly: 0
    i_quickactions_unassign_specific_weekly: 0
    i_quickactions_unassign_specific_monthly: 0
    i_quickactions_unassign_all_weekly: 0
    i_quickactions_unassign_all_monthly: 0
    i_quickactions_unassign_reviewer_weekly: 0
    i_quickactions_unassign_reviewer_monthly: 0
    i_quickactions_unlabel_specific_weekly: 0
    i_quickactions_unlabel_specific_monthly: 0
    i_quickactions_unlabel_all_weekly: 0
    i_quickactions_unlabel_all_monthly: 0
    i_quickactions_unlock_weekly: 0
    i_quickactions_unlock_monthly: 0
    i_quickactions_unsubscribe_weekly: 0
    i_quickactions_unsubscribe_monthly: 0
    i_quickactions_weight_weekly: 0
    i_quickactions_weight_monthly: 0
    i_quickactions_wip_weekly: 0
    i_quickactions_wip_monthly: 0
    i_quickactions_zoom_weekly: 0
    i_quickactions_zoom_monthly: 0
    i_quickactions_invite_email_single_weekly: 0
    i_quickactions_invite_email_single_monthly: 0
    i_quickactions_invite_email_multiple_weekly: 0
    i_quickactions_invite_email_multiple_monthly: 0
    quickactions_total_unique_counts_weekly: 0
    quickactions_total_unique_counts_monthly: 0
  deploy_token_packages:
    i_package_composer_deploy_token_weekly: 0
    i_package_composer_deploy_token_monthly: 0
    i_package_conan_deploy_token_weekly: 0
    i_package_conan_deploy_token_monthly: 0
    i_package_container_deploy_token_weekly: 0
    i_package_container_deploy_token_monthly: 0
    i_package_debian_deploy_token_weekly: 0
    i_package_debian_deploy_token_monthly: 0
    i_package_generic_deploy_token_weekly: 0
    i_package_generic_deploy_token_monthly: 0
    i_package_golang_deploy_token_weekly: 0
    i_package_golang_deploy_token_monthly: 0
    i_package_helm_deploy_token_weekly: 0
    i_package_helm_deploy_token_monthly: 0
    i_package_maven_deploy_token_weekly: 0
    i_package_maven_deploy_token_monthly: 0
    i_package_npm_deploy_token_weekly: 0
    i_package_npm_deploy_token_monthly: 0
    i_package_nuget_deploy_token_weekly: 0
    i_package_nuget_deploy_token_monthly: 0
    i_package_pypi_deploy_token_weekly: 0
    i_package_pypi_deploy_token_monthly: 0
    i_package_rubygems_deploy_token_weekly: 0
    i_package_rubygems_deploy_token_monthly: 0
    i_package_tag_deploy_token_weekly: 0
    i_package_tag_deploy_token_monthly: 0
    i_package_terraform_module_deploy_token_weekly: 0
    i_package_terraform_module_deploy_token_monthly: 0
    deploy_token_packages_total_unique_counts_weekly: 0
    deploy_token_packages_total_unique_counts_monthly: 0
  user_packages:
    i_package_composer_user_weekly: 0
    i_package_composer_user_monthly: 0
    i_package_conan_user_weekly: 0
    i_package_conan_user_monthly: 0
    i_package_container_user_weekly: 0
    i_package_container_user_monthly: 0
    i_package_debian_user_weekly: 0
    i_package_debian_user_monthly: 0
    i_package_generic_user_weekly: 0
    i_package_generic_user_monthly: 0
    i_package_golang_user_weekly: 0
    i_package_golang_user_monthly: 0
    i_package_helm_user_weekly: 0
    i_package_helm_user_monthly: 0
    i_package_maven_user_weekly: 0
    i_package_maven_user_monthly: 0
    i_package_npm_user_weekly: 0
    i_package_npm_user_monthly: 0
    i_package_nuget_user_weekly: 0
    i_package_nuget_user_monthly: 0
    i_package_pypi_user_weekly: 0
    i_package_pypi_user_monthly: 0
    i_package_rubygems_user_weekly: 0
    i_package_rubygems_user_monthly: 0
    i_package_tag_user_weekly: 0
    i_package_tag_user_monthly: 0
    i_package_terraform_module_user_weekly: 0
    i_package_terraform_module_user_monthly: 0
    user_packages_total_unique_counts_weekly: 0
    user_packages_total_unique_counts_monthly: 0
  ecosystem:
    i_ecosystem_jira_service_close_issue_weekly: 0
    i_ecosystem_jira_service_close_issue_monthly: 0
    i_ecosystem_jira_service_cross_reference_weekly: 0
    i_ecosystem_jira_service_cross_reference_monthly: 0
    i_ecosystem_jira_service_list_issues_weekly: 0
    i_ecosystem_jira_service_list_issues_monthly: 0
    i_ecosystem_jira_service_create_issue_weekly: 0
    i_ecosystem_jira_service_create_issue_monthly: 0
    i_ecosystem_slack_service_issue_notification_weekly: 0
    i_ecosystem_slack_service_issue_notification_monthly: 0
    i_ecosystem_slack_service_push_notification_weekly: 0
    i_ecosystem_slack_service_push_notification_monthly: 0
    i_ecosystem_slack_service_deployment_notification_weekly: 0
    i_ecosystem_slack_service_deployment_notification_monthly: 0
    i_ecosystem_slack_service_wiki_page_notification_weekly: 0
    i_ecosystem_slack_service_wiki_page_notification_monthly: 0
    i_ecosystem_slack_service_merge_request_notification_weekly: 0
    i_ecosystem_slack_service_merge_request_notification_monthly: 0
    i_ecosystem_slack_service_note_notification_weekly: 0
    i_ecosystem_slack_service_note_notification_monthly: 0
    i_ecosystem_slack_service_tag_push_notification_weekly: 0
    i_ecosystem_slack_service_tag_push_notification_monthly: 0
    i_ecosystem_slack_service_confidential_note_notification_weekly: 0
    i_ecosystem_slack_service_confidential_note_notification_monthly: 0
    i_ecosystem_slack_service_confidential_issue_notification_weekly: 0
    i_ecosystem_slack_service_confidential_issue_notification_monthly: 0
    ecosystem_total_unique_counts_weekly: 0
    ecosystem_total_unique_counts_monthly: 0
  analytics:
    users_viewing_analytics_group_devops_adoption_weekly: 0
    users_viewing_analytics_group_devops_adoption_monthly: 0
    i_analytics_dev_ops_adoption_weekly: 0
    i_analytics_dev_ops_adoption_monthly: 0
    i_analytics_dev_ops_score_weekly: 0
    i_analytics_dev_ops_score_monthly: 0
    p_analytics_merge_request_weekly: 0
    p_analytics_merge_request_monthly: 0
    i_analytics_instance_statistics_weekly: 0
    i_analytics_instance_statistics_monthly: 0
    g_analytics_contribution_weekly: 0
    g_analytics_contribution_monthly: 0
    g_analytics_insights_weekly: 0
    g_analytics_insights_monthly: 0
    g_analytics_issues_weekly: 0
    g_analytics_issues_monthly: 0
    g_analytics_productivity_weekly: 0
    g_analytics_productivity_monthly: 0
    g_analytics_valuestream_weekly: 0
    g_analytics_valuestream_monthly: 0
    p_analytics_pipelines_weekly: 0
    p_analytics_pipelines_monthly: 0
    p_analytics_code_reviews_weekly: 0
    p_analytics_code_reviews_monthly: 0
    p_analytics_valuestream_weekly: 0
    p_analytics_valuestream_monthly: 0
    p_analytics_insights_weekly: 0
    p_analytics_insights_monthly: 0
    p_analytics_issues_weekly: 0
    p_analytics_issues_monthly: 0
    p_analytics_repo_weekly: 0
    p_analytics_repo_monthly: 0
    i_analytics_cohorts_weekly: 0
    i_analytics_cohorts_monthly: 0
    analytics_total_unique_counts_weekly: 0
    analytics_total_unique_counts_monthly: 0
:recording_ce_finished_at: !ruby/object:ActiveSupport::TimeWithZone
  utc: 2021-06-18 06:22:35.600399000 Z
  zone: *1
  time: 2021-06-18 06:22:35.600399000 Z
:recording_ee_finished_at: !ruby/object:ActiveSupport::TimeWithZone
  utc: 2021-06-18 06:22:35.600409000 Z
  zone: *1
  time: 2021-06-18 06:22:35.600409000 Z
