import { GlModal } from '@gitlab/ui';
import { shallowMount } from '@vue/test-utils';
import VulnerabilityFindingModal from 'ee/security_dashboard/components/pipeline/vulnerability_finding_modal.vue';
import VulnerabilityDetails from 'ee/vulnerabilities/components/vulnerability_details.vue';

const TEST_VULNERABILITY = {
  name: 'foo',
};

describe('Vulnerability finding modal', () => {
  let wrapper;

  const createWrapper = () =>
    shallowMount(VulnerabilityFindingModal, {
      propsData: {
        finding: TEST_VULNERABILITY,
      },
    });

  const findModal = () => wrapper.findComponent(GlModal);
  const findVulnerabilityDetails = () => wrapper.findComponent(VulnerabilityDetails);

  beforeEach(() => {
    wrapper = createWrapper();
  });

  afterEach(() => {
    wrapper.destroy();
  });

  describe('modal instance', () => {
    it('gets passed the correct props', () => {
      expect(findModal().props()).toMatchObject({
        title: TEST_VULNERABILITY.name,
        modalId: expect.any(String),
      });
    });

    it('makes the component emit "hide" when the modal gets closed', () => {
      expect(wrapper.emitted('hide')).toBeUndefined();

      findModal().vm.$emit('hide');

      expect(wrapper.emitted('hide')).toHaveLength(1);
    });
  });

  describe('finding details', () => {
    it('displays details about the given vulnerability finding', () => {
      expect(findVulnerabilityDetails().props('vulnerability')).toBe(TEST_VULNERABILITY);
    });
  });
});
