# frozen_string_literal: true

module Banzai
  module Filter
    # Using `[[_TOC_]]` or `[toc]`, inserts a Table of Contents list.
    #
    # `[[_TOC_]]` is based on the Gollum syntax. This way we have
    # some consistency between with wiki and normal markdown.
    # The support for this has been removed from GollumTagsFilter
    #
    # `[toc]` is a generally accepted form, used by Typora for example.
    #
    # Based on Banzai::Filter::GollumTagsFilter
    class TableOfContentsTagFilter < HTML::Pipeline::Filter
      TEXT_QUERY = %q(descendant-or-self::text()[ancestor::p and contains(translate(., 'TOC', 'toc'), 'toc')])

      def call
        return doc if context[:no_header_anchors]

        doc.xpath(TEXT_QUERY).each do |node|
          # A Gollum ToC tag is `[[_TOC_]]`, but due to MarkdownFilter running
          # before this one, it will be converted into `[[<em>TOC</em>]]`, so it
          # needs special-case handling
          process_toc_tag(node)
        end

        doc
      end

      private

      # Replace an entire `[[<em>TOC</em>]]` or `[toc]` node with the result generated by
      # TableOfContentsFilter
      def process_toc_tag(node)
        node_to_replace = toc_node(node)
        return unless node_to_replace

        node_to_replace.replace(result[:toc].presence || '')
      end

      def toc_node(node)
        commonly_used_toc_node(node) || gollem_toc_node(node)
      end

      # [toc] (case insenstive)
      def commonly_used_toc_node(node)
        node.parent if
          node.content.strip.casecmp?('[toc]') &&
            node.parent.text.strip.casecmp?('[toc]')
      end

      # [[_TOC_]] (case sensitive)
      def gollem_toc_node(node)
        node.parent.parent if
          node.content == 'TOC' &&
            node.parent.name == 'em' &&
            node.parent.parent.text.strip == '[[TOC]]'
      end
    end
  end
end
